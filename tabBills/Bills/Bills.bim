{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "collation": "Latin1_General_CS_AS",
    "dataSources": [
      {
        "name": "SqlServer svr-liv-dw-01 red_dw",
        "connectionString": "Provider=SQLNCLI11;Data Source=svr-liv-dw-01;Initial Catalog=red_dw;Integrated Security=SSPI;Persist Security Info=false",
        "impersonationMode": "impersonateAccount",
        "account": "sbc\\DWH_SSASAdmin",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Matters",
        "columns": [
          {
            "name": "MatterID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MatterID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "DisbursementBalance",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DisbursementBalance",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientAccountBalance",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ClientAccountBalance",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "UnpaidBillsBalance",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UnpaidBillsBalance",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "WIPBalance",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "WIPBalance",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "CostsToDate",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CostsToDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "TotalTimeBilled",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalTimeBilled",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "NumberOfBillsRaised",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NumberOfBillsRaised",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "UnbilledTime",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UnbilledTime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterNumber",
            "dataType": "string",
            "sourceColumn": "MatterNumber"
          },
          {
            "name": "MatterDesc",
            "dataType": "string",
            "sourceColumn": "MatterDesc"
          },
          {
            "name": "PartnerCode",
            "dataType": "string",
            "sourceColumn": "PartnerCode"
          },
          {
            "name": "FEDCodeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FEDCodeID"
          },
          {
            "name": "DateMatterOpen",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateMatterOpen"
          },
          {
            "name": "DateMatterClosed",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateMatterClosed"
          },
          {
            "name": "AgeOfMatterDays",
            "dataType": "int64",
            "sourceColumn": "AgeOfMatterDays"
          },
          {
            "name": "LastBillDate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LastBillDate"
          },
          {
            "name": "LastTimeDate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LastTimeDate"
          },
          {
            "name": "ClientID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ClientID"
          },
          {
            "name": "HasRecordInCashdr",
            "dataType": "string",
            "sourceColumn": "HasRecordInCashdr"
          },
          {
            "name": "MatterGroupID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MatterGroupID"
          },
          {
            "name": "BranchID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BranchID"
          },
          {
            "name": "WorkTypeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "WorkTypeID"
          },
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "FileClosedStatus",
            "dataType": "string",
            "sourceColumn": "FileClosedStatus"
          },
          {
            "name": "MatterNumberTrimmed",
            "dataType": "string",
            "sourceColumn": "MatterNumberTrimmed"
          },
          {
            "name": "FixedFee",
            "dataType": "string",
            "sourceColumn": "FixedFee"
          },
          {
            "name": "FixedFeeAmount",
            "dataType": "double",
            "sourceColumn": "FixedFeeAmount"
          },
          {
            "name": "Delegated",
            "dataType": "string",
            "sourceColumn": "Delegated"
          },
          {
            "name": "PartnerName",
            "dataType": "string",
            "sourceColumn": "PartnerName"
          },
          {
            "name": "dim_instruction_type_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "dim_instruction_type_key"
          },
          {
            "name": "reporting_exclusions",
            "dataType": "int64",
            "sourceColumn": "reporting_exclusions"
          },
          {
            "name": "MasterClientCode",
            "dataType": "string",
            "sourceColumn": "MasterClientCode"
          },
          {
            "name": "MasterMatterNumber",
            "dataType": "string",
            "sourceColumn": "MasterMatterNumber"
          },
          {
            "name": "MasterClientMatterCombined",
            "dataType": "string",
            "sourceColumn": "MasterClientMatterCombined"
          },
          {
            "name": "MasterFactKey",
            "dataType": "int64",
            "sourceColumn": "MasterFactKey"
          },
          {
            "name": "BillingPortalStatus",
            "dataType": "string",
            "sourceColumn": "BillingPortalStatus"
          },
          {
            "name": "DimDetailCoreDetailKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DimDetailCoreDetailKey"
          },
          {
            "name": "DimClientInvolvementKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DimClientInvolvementKey"
          },
          {
            "name": "MasterClientKey",
            "dataType": "int64",
            "sourceColumn": "MasterClientKey"
          },
          {
            "name": "OutcomeKey",
            "dataType": "int64",
            "sourceColumn": "OutcomeKey"
          }
        ],
        "partitions": [
          {
            "name": "factMatter",
            "source": {
              "query": [
                "SELECT",
                "fdm.dim_detail_outcome_key AS OutcomeKey,",
                "f.master_fact_key as MasterFactKey,",
                "d.master_client_code as MasterClientCode,",
                "d.master_matter_number as MasterMatterNumber,",
                "d.master_client_code + '-' + d.master_matter_number as MasterClientMatterCombined,",
                "f.dim_matter_header_curr_key MatterID,",
                "f.dim_fed_hierarchy_history_key FEDCodeID,",
                "d.dim_matter_group_key MatterGroupID,",
                "br.dim_matter_branch_key BranchID,",
                "d.dim_matter_worktype_key WorkTypeID,",
                "d.dim_department_key DepartmentID,",
                "d.matter_partner_code PartnerCode,",
                "d.matter_partner_full_name as PartnerName,",
                "d.matter_number MatterNumber,",
                "CASE WHEN ISNUMERIC(d.matter_number) = 1 and rtrim(d.matter_number) != '.' THEN CAST(CAST(d.matter_number AS int) AS varchar) ELSE RTRIM(d.matter_number) END as 'MatterNumberTrimmed',",
                "f.dim_client_key ClientID,",
                "d.matter_description MatterDesc,",
                "f.dim_open_practice_management_date_key DateMatterOpen,",
                "f.dim_closed_practice_management_date_key DateMatterClosed,",
                "datediff(day, d.date_opened_practice_management, isnull(d.date_closed_practice_management, getdate())) AgeOfMatterDays,",
                "disbursement_balance DisbursementBalance,",
                "client_account_balance_of_matter ClientAccountBalance,",
                "unpaid_bill_balance UnpaidBillsBalance,",
                "wip_balance WIPBalance,",
                "costs_to_date CostsToDate,",
                "time_billed TotalTimeBilled,",
                "number_bills_matter NumberOfBillsRaised,",
                "unbilled_time UnbilledTime,",
                "case when d.case_id is null then 'No' else 'Yes' end HasRecordInCashdr,",
                "dim_last_bill_date_key LastBillDate,",
                "dim_last_transaction_date_key LastTimeDate,",
                "case when ",
                "d.date_closed_case_management is not null",
                "and d.date_closed_practice_management is null",
                "then 'OpenInArtiionClosedInFED' else null end as 'FileClosedStatus',",
                "fixed_fee FixedFee,",
                "fixed_fee_amount FixedFeeAmount,",
                "delegated Delegated,",
                "d.dim_instruction_type_key,",
                "d.reporting_exclusions,",
                "billing_portal_status as 'BillingPortalStatus',",
                "fdm.dim_detail_core_detail_key as DimDetailCoreDetailKey,",
                "fdm.dim_client_involvement_key as DimClientInvolvementKey,",
                "master_client.dim_client_key as MasterClientKey",
                "",
                "from",
                "red_dw.dbo.fact_matter_summary_current f",
                "",
                "inner join red_dw.dbo.dim_matter_header_current d",
                " on d.dim_matter_header_curr_key = f.dim_matter_header_curr_key",
                "",
                "left join red_dw.dbo.dim_matter_branch br",
                " on br.branch_code = d.branch_code",
                "",
                "left join fact_dimension_main fdm on fdm.master_fact_key = f.master_fact_key ",
                "",
                "left join red_dw.dbo.dim_client as master_client ",
                "    on CASE WHEN ISNUMERIC(d.master_client_code) = 1 THEN RIGHT('00000000' + CONVERT(VARCHAR,d.master_client_code), 8) ELSE CAST(RTRIM(d.master_client_code)  AS VARCHAR(8)) END",
                "                         = master_client.client_code",
                "",
                "",
                "",
                "where",
                "f.dim_matter_header_curr_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Total Time Billed",
            "expression": "sum([TotalTimeBilled])"
          },
          {
            "name": "TotalDisbursementBalance",
            "expression": "sum([DisbursementBalance])"
          },
          {
            "name": "TotalClientaccountBalance",
            "expression": "sum([ClientAccountBalance])"
          },
          {
            "name": "TotalUnpaidBillsBalance",
            "expression": "sum([UnpaidBillsBalance])"
          },
          {
            "name": "TotalWIPBalance",
            "expression": "sum([WIPBalance])"
          },
          {
            "name": "TotalCostsToDate",
            "expression": "sum([CostsToDate])"
          },
          {
            "name": "TotalNumberOfBillsRaised",
            "expression": "sum([NumberOfBillsRaised])"
          },
          {
            "name": "TotalUnbilledTime",
            "expression": "sum([UnbilledTime])"
          },
          {
            "name": "Count of Matters",
            "expression": "countrows(Matters)"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "Matters"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factMatter"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "factMatter"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "fdm.dim_detail_outcome_key AS OutcomeKey,",
              "f.master_fact_key as MasterFactKey,",
              "d.master_client_code as MasterClientCode,",
              "d.master_matter_number as MasterMatterNumber,",
              "d.master_client_code + '-' + d.master_matter_number as MasterClientMatterCombined,",
              "f.dim_matter_header_curr_key MatterID,",
              "f.dim_fed_hierarchy_history_key FEDCodeID,",
              "d.dim_matter_group_key MatterGroupID,",
              "br.dim_matter_branch_key BranchID,",
              "d.dim_matter_worktype_key WorkTypeID,",
              "d.dim_department_key DepartmentID,",
              "d.matter_partner_code PartnerCode,",
              "d.matter_partner_full_name as PartnerName,",
              "d.matter_number MatterNumber,",
              "CASE WHEN ISNUMERIC(d.matter_number) = 1 and rtrim(d.matter_number) != '.' THEN CAST(CAST(d.matter_number AS int) AS varchar) ELSE RTRIM(d.matter_number) END as 'MatterNumberTrimmed',",
              "f.dim_client_key ClientID,",
              "d.matter_description MatterDesc,",
              "f.dim_open_practice_management_date_key DateMatterOpen,",
              "f.dim_closed_practice_management_date_key DateMatterClosed,",
              "datediff(day, d.date_opened_practice_management, isnull(d.date_closed_practice_management, getdate())) AgeOfMatterDays,",
              "disbursement_balance DisbursementBalance,",
              "client_account_balance_of_matter ClientAccountBalance,",
              "unpaid_bill_balance UnpaidBillsBalance,",
              "wip_balance WIPBalance,",
              "costs_to_date CostsToDate,",
              "time_billed TotalTimeBilled,",
              "number_bills_matter NumberOfBillsRaised,",
              "unbilled_time UnbilledTime,",
              "case when d.case_id is null then 'No' else 'Yes' end HasRecordInCashdr,",
              "dim_last_bill_date_key LastBillDate,",
              "dim_last_transaction_date_key LastTimeDate,",
              "case when ",
              "d.date_closed_case_management is not null",
              "and d.date_closed_practice_management is null",
              "then 'OpenInArtiionClosedInFED' else null end as 'FileClosedStatus',",
              "fixed_fee FixedFee,",
              "fixed_fee_amount FixedFeeAmount,",
              "delegated Delegated,",
              "d.dim_instruction_type_key,",
              "d.reporting_exclusions,",
              "billing_portal_status as 'BillingPortalStatus',",
              "fdm.dim_detail_core_detail_key as DimDetailCoreDetailKey,",
              "fdm.dim_client_involvement_key as DimClientInvolvementKey,",
              "master_client.dim_client_key as MasterClientKey",
              "",
              "from",
              "red_dw.dbo.fact_matter_summary_current f",
              "",
              "inner join red_dw.dbo.dim_matter_header_current d",
              " on d.dim_matter_header_curr_key = f.dim_matter_header_curr_key",
              "",
              "left join red_dw.dbo.dim_matter_branch br",
              " on br.branch_code = d.branch_code",
              "",
              "left join fact_dimension_main fdm on fdm.master_fact_key = f.master_fact_key ",
              "",
              "left join red_dw.dbo.dim_client as master_client ",
              "    on CASE WHEN ISNUMERIC(d.master_client_code) = 1 THEN RIGHT('00000000' + CONVERT(VARCHAR,d.master_client_code), 8) ELSE CAST(RTRIM(d.master_client_code)  AS VARCHAR(8)) END",
              "                         = master_client.client_code",
              "",
              "",
              "",
              "where",
              "f.dim_matter_header_curr_key > 0"
            ]
          }
        ]
      },
      {
        "name": "Bills",
        "columns": [
          {
            "name": "BillDate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillAmount",
            "dataType": "double",
            "sourceColumn": "BillAmount",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "FeeValue",
            "dataType": "double",
            "sourceColumn": "FeeValue",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "DisbursementsPaid",
            "dataType": "double",
            "sourceColumn": "DisbursementsPaid",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "DisbursementsUnpaid",
            "dataType": "double",
            "sourceColumn": "DisbursementsUnpaid",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "AdministrationCharges",
            "dataType": "double",
            "sourceColumn": "AdministrationCharges",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "VATAmount",
            "dataType": "double",
            "sourceColumn": "VATAmount",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "AmountPaid",
            "dataType": "double",
            "sourceColumn": "AmountPaid",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillNumber",
            "dataType": "string",
            "sourceColumn": "BillNumber"
          },
          {
            "name": "BillTypeCode",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "BillTypeCode"
          },
          {
            "name": "BillFinalOrInterimCode",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "BillFinalOrInterimCode"
          },
          {
            "name": "AmountOutstanding",
            "dataType": "double",
            "sourceColumn": "AmountOutstanding"
          },
          {
            "name": "BillLastPaymentDate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillLastPaymentDate"
          },
          {
            "name": "MatterID",
            "dataType": "int64",
            "sourceColumn": "MatterID"
          },
          {
            "name": "OpenItem",
            "dataType": "string",
            "sourceColumn": "OpenItem"
          },
          {
            "name": "BillAgeDays",
            "dataType": "double",
            "sourceColumn": "BillAgeDays"
          },
          {
            "name": "BillID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillID"
          },
          {
            "name": "BillReversed",
            "dataType": "int64",
            "sourceColumn": "BillReversed"
          }
        ],
        "partitions": [
          {
            "name": "Bills",
            "source": {
              "query": [
                "select distinct",
                "f.dim_bill_key as 'BillID',",
                "f.bill_number as 'BillNumber',",
                "upper(d.record_type) as  'BillTypeCode',",
                "f.dim_matter_header_curr_key as 'MatterID',",
                "d.bill_flag as 'BillFinalOrInterimCode',",
                "f.dim_last_pay_date_key as 'BillLastPaymentDate',",
                "f.dim_bill_date_key as 'BillDate',",
                "f.bill_total as 'BillAmount',",
                "f.fees_total as 'FeeValue',",
                "f.paid_disbursements as 'DisbursementsPaid',",
                "f.unpaid_disbursements as 'DisbursementsUnpaid',",
                "f.admin_charges_total as 'AdministrationCharges',",
                "f.vat_amount as 'VATAmount',",
                "f.amount_paid as 'AmountPaid',",
                "d.bill_reversed 'BillReversed', ",
                "amount_outstanding as 'AmountOutstanding',",
                "case when f.amount_paid = f.bill_total then 0 else cast(datediff(day,cast( cast(f.dim_bill_date_key as varchar(10)) as date), getdate()) as numeric(10,2))  end as 'BillAgeDays',",
                "d.outstanding_flag as 'OpenItem'",
                "",
                "from",
                "red_dw.dbo.fact_bill f",
                "",
                "left join",
                " red_dw.dbo.dim_bill d",
                "  on d.dim_bill_key = f.dim_bill_key",
                "",
                "where ",
                "f.bill_number != 'PURGE'"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;&lt;Gemini xmlns=\"QueryEditorSerialization\"&gt;&lt;AnnotationContent&gt;&lt;![CDATA[&lt;RSQueryCommandText&gt;select distinct",
                  "f.dim_bill_key as 'BillID',",
                  "f.bill_number as 'BillNumber',",
                  "upper(d.record_type) as  'BillTypeCode',",
                  "f.dim_matter_header_curr_key as 'MatterID',",
                  "d.bill_flag as 'BillFinalOrInterimCode',",
                  "f.dim_last_pay_date_key as 'BillLastPaymentDate',",
                  "f.dim_bill_date_key as 'BillDate',",
                  "f.bill_total as 'BillAmount',",
                  "f.fees_total as 'FeeValue',",
                  "f.paid_disbursements as 'DisbursementsPaid',",
                  "f.unpaid_disbursements as 'DisbursementsUnpaid',",
                  "f.admin_charges_total as 'AdministrationCharges',",
                  "f.vat_amount as 'VATAmount',",
                  "f.amount_paid as 'AmountPaid',",
                  "d.bill_reversed 'BillReversed', ",
                  "amount_outstanding as 'AmountOutstanding',",
                  "case when f.amount_paid = f.bill_total then 0 else cast(datediff(day,cast( cast(f.dim_bill_date_key as varchar(10)) as date), getdate()) as numeric(10,2))  end as 'BillAgeDays',",
                  "d.outstanding_flag as 'OpenItem'",
                  "",
                  "from",
                  "red_dw.dbo.fact_bill f",
                  "",
                  "left join",
                  " red_dw.dbo.dim_bill d",
                  "  on d.dim_bill_key = f.dim_bill_key",
                  "",
                  "where ",
                  "f.bill_number != 'PURGE'&lt;/RSQueryCommandText&gt;&lt;RSQueryCommandType&gt;Text&lt;/RSQueryCommandType&gt;&lt;RSQueryDesignState&gt;&lt;/RSQueryDesignState&gt;]]&gt;&lt;/AnnotationContent&gt;&lt;/Gemini&gt;"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalBillAmount",
            "expression": "sum([BillAmount])"
          },
          {
            "name": "Row count",
            "expression": "countrows(Bills)"
          },
          {
            "name": "TotalFeeValue",
            "expression": "sum([FeeValue])"
          },
          {
            "name": "TotalDisbursementsPaid",
            "expression": "sum([DisbursementsPaid])"
          },
          {
            "name": "TotalDisbursementsUnpaid",
            "expression": "sum([DisbursementsUnpaid])"
          },
          {
            "name": "TotalAdministrationCharges",
            "expression": "sum([AdministrationCharges])"
          },
          {
            "name": "TotalVATAmount",
            "expression": "sum([VATAmount])"
          },
          {
            "name": "TotalAmountPaid",
            "expression": "sum([AmountPaid])"
          },
          {
            "name": "TotalBillAmountOutstanding",
            "expression": "calculate(sum([AmountOutstanding]), Bills[OpenItem] = \"Y\")"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "Bills"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factBill"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "factBill"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "f.dim_bill_key as 'BillID',",
              "f.bill_number as 'BillNumber',",
              "upper(d.record_type) as  'BillTypeCode',",
              "f.dim_matter_header_curr_key as 'MatterID',",
              "d.bill_flag as 'BillFinalOrInterimCode',",
              "f.dim_last_pay_date_key as 'BillLastPaymentDate',",
              "f.dim_bill_date_key as 'BillDate',",
              "f.bill_total as 'BillAmount',",
              "f.fees_total as 'FeeValue',",
              "f.paid_disbursements as 'DisbursementsPaid',",
              "f.unpaid_disbursements as 'DisbursementsUnpaid',",
              "f.admin_charges_total as 'AdministrationCharges',",
              "f.vat_amount as 'VATAmount',",
              "f.amount_paid as 'AmountPaid',",
              "d.bill_reversed 'BillReversed', ",
              "amount_outstanding as 'AmountOutstanding',",
              "case when f.amount_paid = f.bill_total then 0 else cast(datediff(day,cast( cast(f.dim_bill_date_key as varchar(10)) as date), getdate()) as numeric(10,2))  end as 'BillAgeDays',",
              "d.outstanding_flag as 'OpenItem'",
              "",
              "from",
              "red_dw.dbo.fact_bill f",
              "",
              "left join",
              " red_dw.dbo.dim_bill d",
              "  on d.dim_bill_key = f.dim_bill_key",
              "",
              "where ",
              "f.bill_number != 'PURGE'"
            ]
          }
        ]
      },
      {
        "name": "dimBranch",
        "columns": [
          {
            "name": "BranchCode",
            "dataType": "string",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "BranchCode"
          },
          {
            "name": "BranchID",
            "dataType": "int64",
            "sourceColumn": "BranchID"
          },
          {
            "name": "BranchName",
            "dataType": "string",
            "sourceColumn": "BranchName"
          }
        ],
        "partitions": [
          {
            "name": "dimBranch",
            "source": {
              "query": [
                "select",
                "dim_matter_branch_key as 'BranchID',",
                "branch_code           as 'BranchCode',",
                "branch_name           as 'BranchName'",
                "",
                "from",
                "red_dw.dbo.dim_matter_branch"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBranch"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimBranch"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimBranch"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_matter_branch_key as 'BranchID',",
              "branch_code           as 'BranchCode',",
              "branch_name           as 'BranchName'",
              "",
              "from",
              "red_dw.dbo.dim_matter_branch"
            ]
          }
        ]
      },
      {
        "name": "dimBillType",
        "columns": [
          {
            "name": "BillTypeCode",
            "dataType": "string",
            "sourceColumn": "BillTypeCode"
          },
          {
            "name": "BillTypeDesc",
            "dataType": "string",
            "sourceColumn": "BillTypeDesc"
          }
        ],
        "partitions": [
          {
            "name": "dimBillRecordType",
            "source": {
              "query": [
                "select distinct",
                "case when bill_record_type = 'Bill' then 'B'",
                " when bill_record_type = 'Abatement' then 'A'",
                " when bill_record_type = 'b' then 'B'",
                " when bill_record_type = 'a' then 'A'",
                " end as 'BillTypeCode',",
                "case when bill_record_type = 'b' then 'Bill' when bill_record_type = 'a' then 'Abatement' else bill_record_type end as 'BillTypeDesc'",
                " ",
                "from",
                "red_dw.dbo.fact_bill_activity",
                "",
                "group by ",
                "case when bill_record_type = 'Bill' then 'B'",
                " when bill_record_type = 'Abatement' then 'A'",
                " when bill_record_type = 'b' then 'B'",
                " when bill_record_type = 'a' then 'A'",
                " end ,",
                "case when bill_record_type = 'b' then 'Bill' when bill_record_type = 'a' then 'Abatement' else bill_record_type end"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBillType"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimBillRecordType"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimBillRecordType"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "case when bill_record_type = 'Bill' then 'B'",
              " when bill_record_type = 'Abatement' then 'A'",
              " when bill_record_type = 'b' then 'B'",
              " when bill_record_type = 'a' then 'A'",
              " end as 'BillTypeCode',",
              "case when bill_record_type = 'b' then 'Bill' when bill_record_type = 'a' then 'Abatement' else bill_record_type end as 'BillTypeDesc'",
              " ",
              "from",
              "red_dw.dbo.fact_bill_activity",
              "",
              "group by ",
              "case when bill_record_type = 'Bill' then 'B'",
              " when bill_record_type = 'Abatement' then 'A'",
              " when bill_record_type = 'b' then 'B'",
              " when bill_record_type = 'a' then 'A'",
              " end ,",
              "case when bill_record_type = 'b' then 'Bill' when bill_record_type = 'a' then 'Abatement' else bill_record_type end"
            ]
          }
        ]
      },
      {
        "name": "dimDateBillDate",
        "columns": [
          {
            "name": "BillDateKey",
            "dataType": "int64",
            "sourceColumn": "BillDateKey"
          },
          {
            "name": "BillDateDate",
            "dataType": "dateTime",
            "sourceColumn": "BillDateDate",
            "formatString": "dd/MM/yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\" xmlns=\"\"><DateTimes><DateTime LCID=\"2057\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "BillDateDayInMonth",
            "dataType": "int64",
            "sourceColumn": "BillDateDayInMonth"
          },
          {
            "name": "BillDateDayInYear",
            "dataType": "int64",
            "sourceColumn": "BillDateDayInYear"
          },
          {
            "name": "BillDateWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "BillDateWeekdayNo"
          },
          {
            "name": "BillDateWeekdayName",
            "dataType": "string",
            "sourceColumn": "BillDateWeekdayName"
          },
          {
            "name": "BillDateCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "BillDateCalendarWeek"
          },
          {
            "name": "BillDateCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "BillDateCalendarMonthNo"
          },
          {
            "name": "BillDateCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "BillDateCalendarMonthName"
          },
          {
            "name": "BillDateCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "BillDateCalendarQuarterNo"
          },
          {
            "name": "BillDateCalendarYear",
            "dataType": "int64",
            "sourceColumn": "BillDateCalendarYear"
          },
          {
            "name": "BillDateFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "BillDateFinancialWeek"
          },
          {
            "name": "BillDateFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "BillDateFinancialMonthNo"
          },
          {
            "name": "BillDateFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "BillDateFinancialMonthName"
          },
          {
            "name": "BillDateFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "BillDateFinancialQuarterNo"
          },
          {
            "name": "BillDateFinancialYear",
            "dataType": "int64",
            "sourceColumn": "BillDateFinancialYear"
          },
          {
            "name": "BillDateWeekend",
            "dataType": "string",
            "sourceColumn": "BillDateWeekend"
          },
          {
            "name": "BillDateHoliday",
            "dataType": "string",
            "sourceColumn": "BillDateHoliday"
          },
          {
            "name": "BillDateFinancialPeriod",
            "dataType": "string",
            "sourceColumn": "BillDateFinancialPeriod",
            "sortByColumn": "BillDateFinancialMonthNo"
          },
          {
            "name": "BillDateDaysInMonth",
            "dataType": "int64",
            "sourceColumn": "BillDateDaysInMonth"
          },
          {
            "name": "BillDateCalendarPeriod",
            "dataType": "string",
            "sourceColumn": "BillDateCalendarPeriod"
          }
        ],
        "partitions": [
          {
            "name": "dimDateBillDate",
            "source": {
              "query": [
                "select",
                "dim_bill_date_key as 'BillDateKey',",
                "bill_date as 'BillDateDate',",
                "bill_cal_day_in_month as 'BillDateDayInMonth',",
                "bill_cal_day_in_year as 'BillDateDayInYear',",
                "bill_cal_day_in_week_no as 'BillDateWeekdayNo',",
                "bill_cal_day_in_week as 'BillDateWeekdayName',",
                "bill_cal_week_in_year as 'BillDateCalendarWeek',",
                "bill_cal_month_no as 'BillDateCalendarMonthNo',",
                "bill_cal_month_name as 'BillDateCalendarMonthName',",
                "bill_cal_quarter_no as 'BillDateCalendarQuarterNo',",
                "bill_cal_year as 'BillDateCalendarYear',",
                "bill_fin_week_in_year as 'BillDateFinancialWeek',",
                "bill_fin_month_no as 'BillDateFinancialMonthNo',",
                "bill_fin_month_name as 'BillDateFinancialMonthName',",
                "bill_fin_quarter_no as 'BillDateFinancialQuarterNo',",
                "bill_fin_year as 'BillDateFinancialYear',",
                "bill_week_end_flag as 'BillDateWeekend',",
                "bill_holiday_flag as 'BillDateHoliday',",
                "bill_fin_month_name + '-' + right(bill_fin_year, 2) as 'BillDateFinancialPeriod',",
                "bill_cal_month_name + '-' + right(bill_cal_year, 2) as 'BillDateCalendarPeriod',",
                "p.BillDateDaysInMonth",
                "",
                "",
                "from",
                "red_dw.dbo.dim_bill_date",
                "",
                "left join (",
                " select ",
                "  bill_fin_month_name + '-' + right(bill_fin_year, 2) as 'BillDateFinancialPeriod',",
                "  max(bill_cal_day_in_month) as 'BillDateDaysInMonth'",
                " from",
                "  red_dw.dbo.dim_bill_date",
                " group by",
                "    bill_fin_month_name + '-' + right(bill_fin_year, 2) ",
                "  ) p",
                "   on p.BillDateFinancialPeriod = bill_fin_month_name + '-' + right(bill_fin_year, 2)",
                "",
                "where",
                "dim_bill_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "FinancialDate",
            "levels": [
              {
                "name": "BillDateFinancialYear",
                "ordinal": 0,
                "column": "BillDateFinancialYear"
              },
              {
                "name": "BillDateFinancialPeriod",
                "ordinal": 1,
                "column": "BillDateFinancialPeriod"
              },
              {
                "name": "BillDateDate",
                "ordinal": 2,
                "column": "BillDateDate"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateBillDate"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateBillDate"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateBillDate"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_bill_date_key as 'BillDateKey',",
              "bill_date as 'BillDateDate',",
              "bill_cal_day_in_month as 'BillDateDayInMonth',",
              "bill_cal_day_in_year as 'BillDateDayInYear',",
              "bill_cal_day_in_week_no as 'BillDateWeekdayNo',",
              "bill_cal_day_in_week as 'BillDateWeekdayName',",
              "bill_cal_week_in_year as 'BillDateCalendarWeek',",
              "bill_cal_month_no as 'BillDateCalendarMonthNo',",
              "bill_cal_month_name as 'BillDateCalendarMonthName',",
              "bill_cal_quarter_no as 'BillDateCalendarQuarterNo',",
              "bill_cal_year as 'BillDateCalendarYear',",
              "bill_fin_week_in_year as 'BillDateFinancialWeek',",
              "bill_fin_month_no as 'BillDateFinancialMonthNo',",
              "bill_fin_month_name as 'BillDateFinancialMonthName',",
              "bill_fin_quarter_no as 'BillDateFinancialQuarterNo',",
              "bill_fin_year as 'BillDateFinancialYear',",
              "bill_week_end_flag as 'BillDateWeekend',",
              "bill_holiday_flag as 'BillDateHoliday',",
              "bill_fin_month_name + '-' + right(bill_fin_year, 2) as 'BillDateFinancialPeriod',",
              "bill_cal_month_name + '-' + right(bill_cal_year, 2) as 'BillDateCalendarPeriod',",
              "p.BillDateDaysInMonth",
              "",
              "",
              "from",
              "red_dw.dbo.dim_bill_date",
              "",
              "left join (",
              " select ",
              "  bill_fin_month_name + '-' + right(bill_fin_year, 2) as 'BillDateFinancialPeriod',",
              "  max(bill_cal_day_in_month) as 'BillDateDaysInMonth'",
              " from",
              "  red_dw.dbo.dim_bill_date",
              " group by",
              "    bill_fin_month_name + '-' + right(bill_fin_year, 2) ",
              "  ) p",
              "   on p.BillDateFinancialPeriod = bill_fin_month_name + '-' + right(bill_fin_year, 2)",
              "",
              "where",
              "dim_bill_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimDateMatterOpened",
        "columns": [
          {
            "name": "DateMatterOpenedKey",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedKey"
          },
          {
            "name": "DateMatterOpenedDate",
            "dataType": "dateTime",
            "sourceColumn": "DateMatterOpenedDate"
          },
          {
            "name": "DateMatterOpenedDayInMonth",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedDayInMonth"
          },
          {
            "name": "DateMatterOpenedDayInYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedDayInYear"
          },
          {
            "name": "DateMatterOpenedWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedWeekdayNo"
          },
          {
            "name": "DateMatterOpenedWeekdayName",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedWeekdayName"
          },
          {
            "name": "DateMatterOpenedCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedCalendarWeek"
          },
          {
            "name": "DateMatterOpenedCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedCalendarMonthNo"
          },
          {
            "name": "DateMatterOpenedCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedCalendarMonthName"
          },
          {
            "name": "DateMatterOpenedCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedCalendarQuarterNo"
          },
          {
            "name": "DateMatterOpenedCalendarYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedCalendarYear"
          },
          {
            "name": "DateMatterOpenedFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedFinancialWeek"
          },
          {
            "name": "DateMatterOpenedFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedFinancialMonthNo"
          },
          {
            "name": "DateMatterOpenedFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedFinancialMonthName"
          },
          {
            "name": "DateMatterOpenedFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedFinancialQuarterNo"
          },
          {
            "name": "DateMatterOpenedFinancialYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterOpenedFinancialYear"
          },
          {
            "name": "DateMatterOpenedWeekend",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedWeekend"
          },
          {
            "name": "DateMatterOpenedHoliday",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedHoliday"
          },
          {
            "name": "DateMatterOpenedFinancialPeriod",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedFinancialPeriod"
          },
          {
            "name": "DateMatterOpenedCalPeriod",
            "dataType": "string",
            "sourceColumn": "DateMatterOpenedCalPeriod"
          }
        ],
        "partitions": [
          {
            "name": "dimDateMatterOpened",
            "source": {
              "query": [
                "select",
                "dim_open_practice_management_date_key DateMatterOpenedKey,",
                "calendar_date DateMatterOpenedDate,",
                "open_practice_management_cal_day_in_month DateMatterOpenedDayInMonth,",
                "open_practice_management_cal_day_in_year DateMatterOpenedDayInYear,",
                "open_practice_management_cal_day_in_week_no DateMatterOpenedWeekdayNo,",
                "open_practice_management_cal_day_in_week DateMatterOpenedWeekdayName,",
                "open_practice_management_cal_week_in_year DateMatterOpenedCalendarWeek,",
                "open_practice_management_cal_month_no DateMatterOpenedCalendarMonthNo,",
                "open_practice_management_cal_month_name DateMatterOpenedCalendarMonthName,",
                "open_practice_management_cal_quarter_no DateMatterOpenedCalendarQuarterNo,",
                "open_practice_management_cal_year DateMatterOpenedCalendarYear,",
                "open_practice_management_fin_week_in_year DateMatterOpenedFinancialWeek,",
                "open_practice_management_fin_month_no DateMatterOpenedFinancialMonthNo,",
                "open_practice_management_fin_month_name DateMatterOpenedFinancialMonthName,",
                "open_practice_management_fin_quarter_no DateMatterOpenedFinancialQuarterNo,",
                "open_practice_management_fin_year DateMatterOpenedFinancialYear,",
                "open_practice_management_week_end_flag DateMatterOpenedWeekend,",
                "open_practice_management_holiday_flag DateMatterOpenedHoliday,",
                "open_practice_management_cal_month_name + '-' + right(open_practice_management_cal_year, 2) DateMatterOpenedCalPeriod,",
                "open_practice_management_fin_month_name + '-' + right(open_practice_management_fin_year, 2) DateMatterOpenedFinancialPeriod",
                "",
                "from",
                "red_dw.dbo.dim_open_practice_management_date",
                "",
                "where",
                "dim_open_practice_management_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy",
            "levels": [
              {
                "name": "DateMatterOpenedFinancialYear",
                "ordinal": 0,
                "column": "DateMatterOpenedFinancialYear"
              },
              {
                "name": "DateMatterOpenedFinancialPeriod",
                "ordinal": 1,
                "column": "DateMatterOpenedFinancialPeriod"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateMatterOpened"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateMatterOpened"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateMatterOpened"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_open_practice_management_date_key DateMatterOpenedKey,",
              "calendar_date DateMatterOpenedDate,",
              "open_practice_management_cal_day_in_month DateMatterOpenedDayInMonth,",
              "open_practice_management_cal_day_in_year DateMatterOpenedDayInYear,",
              "open_practice_management_cal_day_in_week_no DateMatterOpenedWeekdayNo,",
              "open_practice_management_cal_day_in_week DateMatterOpenedWeekdayName,",
              "open_practice_management_cal_week_in_year DateMatterOpenedCalendarWeek,",
              "open_practice_management_cal_month_no DateMatterOpenedCalendarMonthNo,",
              "open_practice_management_cal_month_name DateMatterOpenedCalendarMonthName,",
              "open_practice_management_cal_quarter_no DateMatterOpenedCalendarQuarterNo,",
              "open_practice_management_cal_year DateMatterOpenedCalendarYear,",
              "open_practice_management_fin_week_in_year DateMatterOpenedFinancialWeek,",
              "open_practice_management_fin_month_no DateMatterOpenedFinancialMonthNo,",
              "open_practice_management_fin_month_name DateMatterOpenedFinancialMonthName,",
              "open_practice_management_fin_quarter_no DateMatterOpenedFinancialQuarterNo,",
              "open_practice_management_fin_year DateMatterOpenedFinancialYear,",
              "open_practice_management_week_end_flag DateMatterOpenedWeekend,",
              "open_practice_management_holiday_flag DateMatterOpenedHoliday,",
              "open_practice_management_cal_month_name + '-' + right(open_practice_management_cal_year, 2) DateMatterOpenedCalPeriod,",
              "open_practice_management_fin_month_name + '-' + right(open_practice_management_fin_year, 2) DateMatterOpenedFinancialPeriod",
              "",
              "from",
              "red_dw.dbo.dim_open_practice_management_date",
              "",
              "where",
              "dim_open_practice_management_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimDateMatterClosed",
        "columns": [
          {
            "name": "DateMatterClosedKey",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedKey"
          },
          {
            "name": "DateMatterClosedDate",
            "dataType": "dateTime",
            "sourceColumn": "DateMatterClosedDate"
          },
          {
            "name": "DateMatterClosedDayInMonth",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedDayInMonth"
          },
          {
            "name": "DateMatterClosedDayInYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedDayInYear"
          },
          {
            "name": "DateMatterClosedWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedWeekdayNo"
          },
          {
            "name": "DateMatterClosedWeekdayName",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedWeekdayName"
          },
          {
            "name": "DateMatterClosedCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedCalendarWeek"
          },
          {
            "name": "DateMatterClosedCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedCalendarMonthNo"
          },
          {
            "name": "DateMatterClosedCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedCalendarMonthName"
          },
          {
            "name": "DateMatterClosedCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedCalendarQuarterNo"
          },
          {
            "name": "DateMatterClosedCalendarYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedCalendarYear"
          },
          {
            "name": "DateMatterClosedFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedFinancialWeek"
          },
          {
            "name": "DateMatterClosedFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedFinancialMonthNo"
          },
          {
            "name": "DateMatterClosedFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedFinancialMonthName"
          },
          {
            "name": "DateMatterClosedFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedFinancialQuarterNo"
          },
          {
            "name": "DateMatterClosedFinancialYear",
            "dataType": "int64",
            "sourceColumn": "DateMatterClosedFinancialYear"
          },
          {
            "name": "DateMatterClosedWeekend",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedWeekend"
          },
          {
            "name": "DateMatterClosedHoliday",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedHoliday"
          },
          {
            "name": "DateMatterClosedCalPeriod",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedCalPeriod"
          },
          {
            "name": "DateMatterClosedFinancialPeriod",
            "dataType": "string",
            "sourceColumn": "DateMatterClosedFinancialPeriod"
          }
        ],
        "partitions": [
          {
            "name": "dimDateMatterClosed",
            "source": {
              "query": [
                "select",
                "dim_closed_practice_management_date_key DateMatterClosedKey,",
                "calendar_date DateMatterClosedDate,",
                "closed_practice_management_cal_day_in_month DateMatterClosedDayInMonth,",
                "closed_practice_management_cal_day_in_year DateMatterClosedDayInYear,",
                "closed_practice_management_cal_day_in_week_no DateMatterClosedWeekdayNo,",
                "closed_practice_management_cal_day_in_week DateMatterClosedWeekdayName,",
                "closed_practice_management_cal_week_in_year DateMatterClosedCalendarWeek,",
                "closed_practice_management_cal_month_no DateMatterClosedCalendarMonthNo,",
                "closed_practice_management_cal_month_name DateMatterClosedCalendarMonthName,",
                "closed_practice_management_cal_quarter_no DateMatterClosedCalendarQuarterNo,",
                "closed_practice_management_cal_year DateMatterClosedCalendarYear,",
                "closed_practice_management_fin_week_in_year DateMatterClosedFinancialWeek,",
                "closed_practice_management_fin_month_no DateMatterClosedFinancialMonthNo,",
                "closed_practice_management_fin_month_name DateMatterClosedFinancialMonthName,",
                "closed_practice_management_fin_quarter_no DateMatterClosedFinancialQuarterNo,",
                "closed_practice_management_fin_year DateMatterClosedFinancialYear,",
                "closed_practice_management_week_end_flag DateMatterClosedWeekend,",
                "closed_practice_management_holiday_flag DateMatterClosedHoliday,",
                "closed_practice_management_cal_month_name + '-' + right(closed_practice_management_cal_year, 2) DateMatterClosedCalPeriod,",
                "closed_practice_management_fin_month_name + '-' + right(closed_practice_management_fin_year, 2) DateMatterClosedFinancialPeriod",
                "",
                "",
                "from",
                "red_dw.dbo.dim_closed_practice_management_date",
                "",
                "where ",
                "dim_closed_practice_management_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateMatterClosed"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateMatterClosed"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateMatterClosed"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_closed_practice_management_date_key DateMatterClosedKey,",
              "calendar_date DateMatterClosedDate,",
              "closed_practice_management_cal_day_in_month DateMatterClosedDayInMonth,",
              "closed_practice_management_cal_day_in_year DateMatterClosedDayInYear,",
              "closed_practice_management_cal_day_in_week_no DateMatterClosedWeekdayNo,",
              "closed_practice_management_cal_day_in_week DateMatterClosedWeekdayName,",
              "closed_practice_management_cal_week_in_year DateMatterClosedCalendarWeek,",
              "closed_practice_management_cal_month_no DateMatterClosedCalendarMonthNo,",
              "closed_practice_management_cal_month_name DateMatterClosedCalendarMonthName,",
              "closed_practice_management_cal_quarter_no DateMatterClosedCalendarQuarterNo,",
              "closed_practice_management_cal_year DateMatterClosedCalendarYear,",
              "closed_practice_management_fin_week_in_year DateMatterClosedFinancialWeek,",
              "closed_practice_management_fin_month_no DateMatterClosedFinancialMonthNo,",
              "closed_practice_management_fin_month_name DateMatterClosedFinancialMonthName,",
              "closed_practice_management_fin_quarter_no DateMatterClosedFinancialQuarterNo,",
              "closed_practice_management_fin_year DateMatterClosedFinancialYear,",
              "closed_practice_management_week_end_flag DateMatterClosedWeekend,",
              "closed_practice_management_holiday_flag DateMatterClosedHoliday,",
              "closed_practice_management_cal_month_name + '-' + right(closed_practice_management_cal_year, 2) DateMatterClosedCalPeriod,",
              "closed_practice_management_fin_month_name + '-' + right(closed_practice_management_fin_year, 2) DateMatterClosedFinancialPeriod",
              "",
              "",
              "from",
              "red_dw.dbo.dim_closed_practice_management_date",
              "",
              "where ",
              "dim_closed_practice_management_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimDateBillLastPayment",
        "columns": [
          {
            "name": "DateBillLastPaymentKey",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentKey"
          },
          {
            "name": "DateBillLastPaymentDate",
            "dataType": "dateTime",
            "sourceColumn": "DateBillLastPaymentDate"
          },
          {
            "name": "DateBillLastPaymentDayInMonth",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentDayInMonth"
          },
          {
            "name": "DateBillLastPaymentDayInYear",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentDayInYear"
          },
          {
            "name": "DateBillLastPaymentWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentWeekdayNo"
          },
          {
            "name": "DateBillLastPaymentWeekdayName",
            "dataType": "string",
            "sourceColumn": "DateBillLastPaymentWeekdayName"
          },
          {
            "name": "DateBillLastPaymentCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentCalendarWeek"
          },
          {
            "name": "DateBillLastPaymentCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentCalendarMonthNo"
          },
          {
            "name": "DateBillLastPaymentCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "DateBillLastPaymentCalendarMonthName"
          },
          {
            "name": "DateBillLastPaymentCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentCalendarQuarterNo"
          },
          {
            "name": "DateBillLastPaymentCalendarYear",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentCalendarYear"
          },
          {
            "name": "DateBillLastPaymentFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentFinancialWeek"
          },
          {
            "name": "DateBillLastPaymentFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentFinancialMonthNo"
          },
          {
            "name": "DateBillLastPaymentFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "DateBillLastPaymentFinancialMonthName"
          },
          {
            "name": "DateBillLastPaymentFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentFinancialQuarterNo"
          },
          {
            "name": "DateBillLastPaymentFinancialYear",
            "dataType": "int64",
            "sourceColumn": "DateBillLastPaymentFinancialYear"
          },
          {
            "name": "DateBillLastPaymentWeekend",
            "dataType": "string",
            "sourceColumn": "DateBillLastPaymentWeekend"
          },
          {
            "name": "DateBillLastPaymentHoliday",
            "dataType": "string",
            "sourceColumn": "DateBillLastPaymentHoliday"
          }
        ],
        "partitions": [
          {
            "name": "dimDateBillLastPaymentDate",
            "source": {
              "query": [
                "select",
                "dim_last_pay_date_key DateBillLastPaymentKey,",
                "last_pay_calendar_date DateBillLastPaymentDate,",
                "last_pay_cal_day_in_month DateBillLastPaymentDayInMonth,",
                "last_pay_cal_day_in_year DateBillLastPaymentDayInYear,",
                "last_pay_cal_day_in_week_no DateBillLastPaymentWeekdayNo,",
                "last_pay_cal_day_in_week DateBillLastPaymentWeekdayName,",
                "last_pay_cal_week_in_year DateBillLastPaymentCalendarWeek,",
                "last_pay_cal_month_no DateBillLastPaymentCalendarMonthNo,",
                "last_pay_cal_month_name DateBillLastPaymentCalendarMonthName,",
                "last_pay_cal_quarter_no DateBillLastPaymentCalendarQuarterNo,",
                "last_pay_cal_year DateBillLastPaymentCalendarYear,",
                "last_pay_fin_week_in_year DateBillLastPaymentFinancialWeek,",
                "last_pay_fin_month_no DateBillLastPaymentFinancialMonthNo,",
                "last_pay_fin_month_name DateBillLastPaymentFinancialMonthName,",
                "last_pay_fin_quarter_no DateBillLastPaymentFinancialQuarterNo,",
                "last_pay_fin_year DateBillLastPaymentFinancialYear,",
                "last_pay_week_end_flag DateBillLastPaymentWeekend,",
                "last_pay_holiday_flag DateBillLastPaymentHoliday",
                "",
                "",
                "",
                "from",
                "dim_last_pay_date",
                "",
                "where",
                "dim_last_pay_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateBillLastPayment"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateBillLastPaymentDate"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateBillLastPaymentDate"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_last_pay_date_key DateBillLastPaymentKey,",
              "last_pay_calendar_date DateBillLastPaymentDate,",
              "last_pay_cal_day_in_month DateBillLastPaymentDayInMonth,",
              "last_pay_cal_day_in_year DateBillLastPaymentDayInYear,",
              "last_pay_cal_day_in_week_no DateBillLastPaymentWeekdayNo,",
              "last_pay_cal_day_in_week DateBillLastPaymentWeekdayName,",
              "last_pay_cal_week_in_year DateBillLastPaymentCalendarWeek,",
              "last_pay_cal_month_no DateBillLastPaymentCalendarMonthNo,",
              "last_pay_cal_month_name DateBillLastPaymentCalendarMonthName,",
              "last_pay_cal_quarter_no DateBillLastPaymentCalendarQuarterNo,",
              "last_pay_cal_year DateBillLastPaymentCalendarYear,",
              "last_pay_fin_week_in_year DateBillLastPaymentFinancialWeek,",
              "last_pay_fin_month_no DateBillLastPaymentFinancialMonthNo,",
              "last_pay_fin_month_name DateBillLastPaymentFinancialMonthName,",
              "last_pay_fin_quarter_no DateBillLastPaymentFinancialQuarterNo,",
              "last_pay_fin_year DateBillLastPaymentFinancialYear,",
              "last_pay_week_end_flag DateBillLastPaymentWeekend,",
              "last_pay_holiday_flag DateBillLastPaymentHoliday",
              "",
              "",
              "",
              "from",
              "dim_last_pay_date",
              "",
              "where",
              "dim_last_pay_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimBillFinalOrInterim",
        "columns": [
          {
            "name": "BillFinalOrInterimCode",
            "dataType": "string",
            "sourceColumn": "BillFinalOrInterimCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillFinalOrInterimDesc",
            "dataType": "string",
            "sourceColumn": "BillFinalOrInterimDesc",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimBillFinalOrInterim",
            "source": {
              "query": [
                "select distinct",
                "bill_flag as 'BillFinalOrInterimCode',",
                "case when bill_flag = 'f' then 'Final'",
                " when bill_flag = 'i' then 'Interim'",
                " end as 'BillFinalOrInterimDesc'",
                "  ",
                "from",
                "red_dw.dbo.dim_bill",
                "",
                "where",
                "bill_flag is not null",
                "and bill_flag != ''"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBillFinalOrInterim"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimBillFinalOrInterim"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimBillFinalOrInterim"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "bill_flag as 'BillFinalOrInterimCode',",
              "case when bill_flag = 'f' then 'Final'",
              " when bill_flag = 'i' then 'Interim'",
              " end as 'BillFinalOrInterimDesc'",
              "  ",
              "from",
              "red_dw.dbo.dim_bill",
              "",
              "where",
              "bill_flag is not null",
              "and bill_flag != ''"
            ]
          }
        ]
      },
      {
        "name": "dimWorkType",
        "columns": [
          {
            "name": "WorkTypeCode",
            "dataType": "string",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "WorkTypeCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "WorkTypeID",
            "dataType": "int64",
            "sourceColumn": "WorkTypeID"
          },
          {
            "name": "FrancisGrouping",
            "dataType": "string",
            "sourceColumn": "FrancisGrouping"
          },
          {
            "name": "WorkTypeDesc",
            "dataType": "string",
            "sourceColumn": "WorkTypeDesc"
          }
        ],
        "partitions": [
          {
            "name": "dimWorkType",
            "source": {
              "query": [
                "select",
                "dim_matter_worktype_key as 'WorkTypeID',",
                "work_type_code as 'WorkTypeCode',",
                "work_type_name as 'WorkTypeDesc',",
                "case ",
                " when (work_type_name like '%Healthcare%'",
                "   or  work_type_name like '%NHSLA%') and work_type_code != '0022' then 'NHSLA'",
                " when work_type_code =  '0022'           then 'Healthcare General Advisory' ",
                " when work_type_code in (",
                "       '1319',",
                "       '1320',",
                "       '1321',",
                "       '1322',",
                "       '1323',",
                "       '1324',",
                "       '1325',",
                "       '1326'",
                "       )            then 'Prof Risk - Solicitor'",
                " when work_type_name like '%Prof Risk%' ",
                "   and work_type_code not in (",
                "       '1319',",
                "       '1320',",
                "       '1321',",
                "       '1322',",
                "       '1323',",
                "       '1324',",
                "       '1325',",
                "       '1326'",
                "       )            then work_type_name",
                "",
                " when work_type_code in (",
                "       '1340',",
                "       '1341',",
                "       '1342',",
                "       '1343',",
                "       '1344',",
                "       '1345',",
                "       '1346',",
                "       '1347',",
                "       '1348',",
                "       '1349',",
                "       '1350',",
                "       '1351',",
                "       '1352',",
                "       '1353',",
                "       '1354'",
                "       )           then 'London Market'",
                " when work_type_code in (",
                "       '1000',",
                "       '1001',",
                "       '1002',",
                "       '1003',",
                "       '1004',",
                "       '1005',",
                "       '1006',",
                "       '1007',",
                "       '1008',",
                "       '1009',",
                "       '1010',",
                "       '1011',",
                "       '1012',",
                "       '1013',",
                "       '1014',",
                "       '1015',",
                "       '1016',",
                "       '1017',",
                "       '0031'",
                "       )           then work_type_name",
                " when work_type_code in (",
                "       '1018',",
                "       '1019',",
                "       '1020',",
                "       '1021',",
                "       '1022'",
                "       )           then 'Regulatory - Health and Safety'",
                " when work_type_code in (",
                "       '1023',",
                "       '1024',",
                "       '1025',",
                "       '1026',",
                "       '1027',",
                "       '1028',",
                "       '1029',",
                "       '1030',",
                "       '1031',",
                "       '1032',",
                "       '1033',",
                "       '1107',",
                "       '1108',",
                "       '1109'",
                "       )           then work_type_name",
                " when work_type_code in (",
                "       '1034',",
                "       '1035',",
                "       '1036',",
                "       '1037',",
                "       '1038',",
                "       '1039',",
                "       '1040',",
                "       '1041',",
                "       '1042',",
                "       '1043',",
                "       '1104',",
                "       '1105',",
                "       '1143'",
                "       )           then work_type_name",
                " when work_type_code in (",
                "       '1044',",
                "       '1045',",
                "       '1046',",
                "       '1047',",
                "       '1048',",
                "       '1049',",
                "       '1050',",
                "       '1051',",
                "       '1052',",
                "       '1101',",
                "       '1105',",
                "       '1143'",
                "       )           then work_type_name",
                " when work_type_code in (",
                "       '1084',",
                "       '1085',",
                "       '1086',",
                "       '1087',",
                "       '1088',",
                "       '1089',",
                "       '1090',",
                "       '1091',",
                "       '1092',",
                "       '1093',",
                "       '1094',",
                "       '1095',",
                "       '1096',",
                "       '1097',",
                "       '1098',",
                "       '1099',",
                "       '1100'",
                "       )           then work_type_name",
                " when work_type_code in (",
                "       '1053',",
                "       '1054',",
                "       '1055',",
                "       '1056',",
                "       '1057',",
                "       '1058',",
                "       '1059',",
                "       '1060',",
                "       '1061',",
                "       '1062',",
                "       '1063',",
                "       '1064',",
                "       '1065',",
                "       '1066',",
                "       '1067',",
                "       '1068',",
                "       '1069',",
                "       '1070',",
                "       '1071',",
                "       '1072',",
                "       '1073',",
                "       '1074',",
                "       '1075',",
                "       '1076',",
                "       '1077',",
                "       '1078',",
                "       '1079',",
                "       '1080',",
                "       '1081',",
                "       '1082',",
                "       '1103',",
                "       '1144'",
                "       )            then 'Contentious/Non-Contentious'",
                " when work_type_code in (",
                "       '1315',",
                "       '1316',",
                "       '1317',",
                "       '1318'",
                "       )            then work_type_name",
                " when work_type_code in (",
                "       '1468',",
                "       '1469',",
                "       '1470',",
                "       '1471',",
                "       '1472'",
                "       )            then work_type_name",
                " when work_type_code in (",
                "       '1128',",
                "       '1129',",
                "       '1130',",
                "       '1131',",
                "       '1132',",
                "       '1133',",
                "       '1134',",
                "       '1356',",
                "       '1361'",
                "       )            then work_type_name",
                " when work_type_code in (",
                "       '0028',",
                "       '0032'",
                "       )            then work_type_name",
                " when work_type_code in (",
                "       '1206',",
                "       '1207',",
                "       '1208',",
                "       '1209',",
                "       '1210',",
                "       '1211',",
                "       '1212',",
                "       '1213',",
                "       '1214',",
                "       '1215',",
                "       '1216',",
                "       '1217',",
                "       '1218',",
                "       '1219',",
                "       '1220',",
                "       '1221',",
                "       '1222',",
                "       '1223',",
                "       '1224',",
                "       '1225',",
                "       '1226',",
                "       '1227',",
                "       '1228',",
                "       '1229',",
                "       '1230',",
                "       '1231',",
                "       '1232',",
                "       '1233',",
                "       '1234',",
                "       '1235',",
                "       '1236',",
                "       '1237',",
                "       '1238',",
                "       '1239'",
                "       )             then 'EL'",
                " when work_type_name like 'Motor%'           then 'Motor'",
                " when work_type_name like 'PL - Prop Damage%'        then 'PL - Property Damage'",
                " when work_type_name like 'Disease%'           then 'Disease'",
                " when work_type_code in (",
                "       '1301',",
                "       '1302',",
                "       '1303',",
                "       '1304',",
                "       '1305',",
                "       '1307'",
                "       )             then 'Police - Contentious'",
                " when work_type_code in (",
                "       '1306',",
                "       '1308',",
                "       '1309',",
                "       '1310',",
                "       '1311',",
                "       '1312',",
                "       '1313',",
                "       '1314',",
                "       '1560',",
                "       '0034'",
                "       )             then 'Police - Non-Contentious'",
                " when work_type_name like 'PL%'",
                "  and work_type_name not like 'PL - Prop Damage%'       then 'PL'",
                " when work_type_code in (",
                "       '1115',",
                "       '1116',",
                "       '1117',",
                "       '1118',",
                "       '1119',",
                "       '1120',",
                "       '1121',",
                "       '1122',",
                "       '1123',",
                "       '1124',",
                "       '1125',",
                "       '1126'",
                "       )             then work_type_name",
                " when work_type_code in (",
                "       '1293',",
                "       '1294',",
                "       '1295',",
                "       '1296',",
                "       '1568'",
                "       )             then work_type_name",
                " else work_type_name",
                "end as 'FrancisGrouping'",
                " ",
                "",
                "",
                "from",
                "dim_matter_worktype"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimWorkType"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimWorkType"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimWorkType"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_matter_worktype_key as 'WorkTypeID',",
              "work_type_code as 'WorkTypeCode',",
              "work_type_name as 'WorkTypeDesc',",
              "case ",
              " when (work_type_name like '%Healthcare%'",
              "   or  work_type_name like '%NHSLA%') and work_type_code != '0022' then 'NHSLA'",
              " when work_type_code =  '0022'           then 'Healthcare General Advisory' ",
              " when work_type_code in (",
              "       '1319',",
              "       '1320',",
              "       '1321',",
              "       '1322',",
              "       '1323',",
              "       '1324',",
              "       '1325',",
              "       '1326'",
              "       )            then 'Prof Risk - Solicitor'",
              " when work_type_name like '%Prof Risk%' ",
              "   and work_type_code not in (",
              "       '1319',",
              "       '1320',",
              "       '1321',",
              "       '1322',",
              "       '1323',",
              "       '1324',",
              "       '1325',",
              "       '1326'",
              "       )            then work_type_name",
              "",
              " when work_type_code in (",
              "       '1340',",
              "       '1341',",
              "       '1342',",
              "       '1343',",
              "       '1344',",
              "       '1345',",
              "       '1346',",
              "       '1347',",
              "       '1348',",
              "       '1349',",
              "       '1350',",
              "       '1351',",
              "       '1352',",
              "       '1353',",
              "       '1354'",
              "       )           then 'London Market'",
              " when work_type_code in (",
              "       '1000',",
              "       '1001',",
              "       '1002',",
              "       '1003',",
              "       '1004',",
              "       '1005',",
              "       '1006',",
              "       '1007',",
              "       '1008',",
              "       '1009',",
              "       '1010',",
              "       '1011',",
              "       '1012',",
              "       '1013',",
              "       '1014',",
              "       '1015',",
              "       '1016',",
              "       '1017',",
              "       '0031'",
              "       )           then work_type_name",
              " when work_type_code in (",
              "       '1018',",
              "       '1019',",
              "       '1020',",
              "       '1021',",
              "       '1022'",
              "       )           then 'Regulatory - Health and Safety'",
              " when work_type_code in (",
              "       '1023',",
              "       '1024',",
              "       '1025',",
              "       '1026',",
              "       '1027',",
              "       '1028',",
              "       '1029',",
              "       '1030',",
              "       '1031',",
              "       '1032',",
              "       '1033',",
              "       '1107',",
              "       '1108',",
              "       '1109'",
              "       )           then work_type_name",
              " when work_type_code in (",
              "       '1034',",
              "       '1035',",
              "       '1036',",
              "       '1037',",
              "       '1038',",
              "       '1039',",
              "       '1040',",
              "       '1041',",
              "       '1042',",
              "       '1043',",
              "       '1104',",
              "       '1105',",
              "       '1143'",
              "       )           then work_type_name",
              " when work_type_code in (",
              "       '1044',",
              "       '1045',",
              "       '1046',",
              "       '1047',",
              "       '1048',",
              "       '1049',",
              "       '1050',",
              "       '1051',",
              "       '1052',",
              "       '1101',",
              "       '1105',",
              "       '1143'",
              "       )           then work_type_name",
              " when work_type_code in (",
              "       '1084',",
              "       '1085',",
              "       '1086',",
              "       '1087',",
              "       '1088',",
              "       '1089',",
              "       '1090',",
              "       '1091',",
              "       '1092',",
              "       '1093',",
              "       '1094',",
              "       '1095',",
              "       '1096',",
              "       '1097',",
              "       '1098',",
              "       '1099',",
              "       '1100'",
              "       )           then work_type_name",
              " when work_type_code in (",
              "       '1053',",
              "       '1054',",
              "       '1055',",
              "       '1056',",
              "       '1057',",
              "       '1058',",
              "       '1059',",
              "       '1060',",
              "       '1061',",
              "       '1062',",
              "       '1063',",
              "       '1064',",
              "       '1065',",
              "       '1066',",
              "       '1067',",
              "       '1068',",
              "       '1069',",
              "       '1070',",
              "       '1071',",
              "       '1072',",
              "       '1073',",
              "       '1074',",
              "       '1075',",
              "       '1076',",
              "       '1077',",
              "       '1078',",
              "       '1079',",
              "       '1080',",
              "       '1081',",
              "       '1082',",
              "       '1103',",
              "       '1144'",
              "       )            then 'Contentious/Non-Contentious'",
              " when work_type_code in (",
              "       '1315',",
              "       '1316',",
              "       '1317',",
              "       '1318'",
              "       )            then work_type_name",
              " when work_type_code in (",
              "       '1468',",
              "       '1469',",
              "       '1470',",
              "       '1471',",
              "       '1472'",
              "       )            then work_type_name",
              " when work_type_code in (",
              "       '1128',",
              "       '1129',",
              "       '1130',",
              "       '1131',",
              "       '1132',",
              "       '1133',",
              "       '1134',",
              "       '1356',",
              "       '1361'",
              "       )            then work_type_name",
              " when work_type_code in (",
              "       '0028',",
              "       '0032'",
              "       )            then work_type_name",
              " when work_type_code in (",
              "       '1206',",
              "       '1207',",
              "       '1208',",
              "       '1209',",
              "       '1210',",
              "       '1211',",
              "       '1212',",
              "       '1213',",
              "       '1214',",
              "       '1215',",
              "       '1216',",
              "       '1217',",
              "       '1218',",
              "       '1219',",
              "       '1220',",
              "       '1221',",
              "       '1222',",
              "       '1223',",
              "       '1224',",
              "       '1225',",
              "       '1226',",
              "       '1227',",
              "       '1228',",
              "       '1229',",
              "       '1230',",
              "       '1231',",
              "       '1232',",
              "       '1233',",
              "       '1234',",
              "       '1235',",
              "       '1236',",
              "       '1237',",
              "       '1238',",
              "       '1239'",
              "       )             then 'EL'",
              " when work_type_name like 'Motor%'           then 'Motor'",
              " when work_type_name like 'PL - Prop Damage%'        then 'PL - Property Damage'",
              " when work_type_name like 'Disease%'           then 'Disease'",
              " when work_type_code in (",
              "       '1301',",
              "       '1302',",
              "       '1303',",
              "       '1304',",
              "       '1305',",
              "       '1307'",
              "       )             then 'Police - Contentious'",
              " when work_type_code in (",
              "       '1306',",
              "       '1308',",
              "       '1309',",
              "       '1310',",
              "       '1311',",
              "       '1312',",
              "       '1313',",
              "       '1314',",
              "       '1560',",
              "       '0034'",
              "       )             then 'Police - Non-Contentious'",
              " when work_type_name like 'PL%'",
              "  and work_type_name not like 'PL - Prop Damage%'       then 'PL'",
              " when work_type_code in (",
              "       '1115',",
              "       '1116',",
              "       '1117',",
              "       '1118',",
              "       '1119',",
              "       '1120',",
              "       '1121',",
              "       '1122',",
              "       '1123',",
              "       '1124',",
              "       '1125',",
              "       '1126'",
              "       )             then work_type_name",
              " when work_type_code in (",
              "       '1293',",
              "       '1294',",
              "       '1295',",
              "       '1296',",
              "       '1568'",
              "       )             then work_type_name",
              " else work_type_name",
              "end as 'FrancisGrouping'",
              " ",
              "",
              "",
              "from",
              "dim_matter_worktype"
            ]
          }
        ]
      },
      {
        "name": "dimMatterFEDHierarchy",
        "columns": [
          {
            "name": "MatterFEDCodeID",
            "dataType": "int64",
            "sourceColumn": "MatterFEDCodeID"
          },
          {
            "name": "MatterFEDCode",
            "dataType": "string",
            "sourceColumn": "MatterFEDCode"
          },
          {
            "name": "MatterFEDName",
            "dataType": "string",
            "sourceColumn": "MatterFEDName"
          },
          {
            "name": "MatterBusinessLine",
            "dataType": "string",
            "sourceColumn": "MatterBusinessLine"
          },
          {
            "name": "MatterPracticeArea",
            "dataType": "string",
            "sourceColumn": "MatterPracticeArea"
          },
          {
            "name": "MatterTeam",
            "dataType": "string",
            "sourceColumn": "MatterTeam"
          },
          {
            "name": "MatterBCMName",
            "dataType": "string",
            "sourceColumn": "MatterBCMName"
          },
          {
            "name": "MatterLeaver",
            "dataType": "string",
            "sourceColumn": "MatterLeaver"
          },
          {
            "name": "MatterCurrentFlag",
            "dataType": "string",
            "sourceColumn": "MatterCurrentFlag"
          },
          {
            "name": "MatterLogin",
            "dataType": "string",
            "sourceColumn": "MatterLogin"
          },
          {
            "name": "MatterActiveUD",
            "dataType": "boolean",
            "sourceColumn": "MatterActiveUD"
          },
          {
            "name": "MatterFEDDisplayName",
            "dataType": "string",
            "sourceColumn": "MatterFEDDisplayName"
          },
          {
            "name": "dim_employee_key",
            "dataType": "int64",
            "sourceColumn": "dim_employee_key"
          },
          {
            "name": "MatterBusinessLine_PreFrancis",
            "dataType": "string",
            "sourceColumn": "MatterBusinessLine_PreFrancis"
          },
          {
            "name": "MatterPracticeArea_PreFrancis",
            "dataType": "string",
            "sourceColumn": "MatterPracticeArea_PreFrancis"
          },
          {
            "name": "MatterTeam_PreFrancis",
            "dataType": "string",
            "sourceColumn": "MatterTeam_PreFrancis"
          },
          {
            "name": "MatterSupervisorName",
            "dataType": "string",
            "sourceColumn": "MatterSupervisorName"
          },
          {
            "name": "employeeid",
            "dataType": "string",
            "sourceColumn": "employeeid"
          },
          {
            "name": "worksforemployeeid",
            "dataType": "string",
            "sourceColumn": "worksforemployeeid"
          }
        ],
        "partitions": [
          {
            "name": "dimMatterFEDHierarchy",
            "source": {
              "query": [
                "select distinct",
                "dim_employee_key,",
                "employeeid,",
                "dim_fed_hierarchy_history_key as 'MatterFEDCodeID',",
                "fed_code as 'MatterFEDCode',",
                "name as 'MatterFEDName',",
                "display_name as 'MatterFEDDisplayName',",
                "hierarchylevel2hist as 'MatterBusinessLine',",
                "hierarchylevel3hist as 'MatterPracticeArea',",
                "hierarchylevel4hist as 'MatterTeam',",
                "hierarchylevel2hist as 'MatterBusinessLine_PreFrancis',",
                "hierarchylevel3hist as 'MatterPracticeArea_PreFrancis',",
                "hierarchylevel4hist as 'MatterTeam_PreFrancis',",
                "reportingbcmname as 'MatterBCMName',",
                "worksforname    AS 'MatterSupervisorName',",
                "worksforemployeeid    AS 'worksforemployeeid',",
                "case when leaver = 1 then 'Y' else 'N' end as 'MatterLeaver',",
                "windowsusername as 'MatterLogin',",
                "dss_current_flag as 'MatterCurrentFlag',",
                "activeud as 'MatterActiveUD'",
                "--case when leaver = 1 and activeud = 0 and dss_current_flag = 'Y'  then 'Leaver' ",
                "--    when h1.activeud = 1 and h1.dss_current_flag = 'Y' and attend.type = 'Maternity' then 'Maternity'",
                "--  when h1.activeud = 0 and h1.dss_current_flag = 'Y' and e.leaver = 0 then 'Team Transfer'",
                "--end as 'AuditStatus'",
                "",
                "from",
                "red_dw.dbo.dim_fed_hierarchy_history"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;&lt;Gemini xmlns=\"QueryEditorSerialization\"&gt;&lt;AnnotationContent&gt;&lt;![CDATA[&lt;RSQueryCommandText&gt;select distinct",
                  "h1.dim_fed_hierarchy_history_key as 'MatterFEDCodeID',",
                  "e.displayemployeeid as 'MatterCascadeEmployeeID',",
                  "e.payrollid as 'MatterPayrollID',",
                  "h1.fed_code as 'MatterFEDCode',",
                  "h1.name as 'MatterFEDName',",
                  "e.forename as 'MatterFEDForename',",
                  "e.surname as 'MatterFEDSurname',",
                  "e4.workemail as 'MatterEmailAddress',",
                  "j.locationidud as 'MatterFEDLocation',",
                  "case when j.levelidud in ('Equity Partner','Fixed Share Partner','Silver Equity Partner') then 'Partner' else j.levelidud end as 'MatterGrade',",
                  "h1.hierarchylevel2hist as 'MatterBusinessLine',",
                  "h1.hierarchylevel3hist as 'MatterPracticeArea',",
                  "h1.hierarchylevel4hist as 'MatterTeam',",
                  "h1.reportingbcmname as 'MatterBCMName',",
                  "e3.workemail as 'MatterBCMEmail',",
                  "case when e3.payrollid = '' or e3.payrollid is null then e.displayemployeeid else e3.payrollid end AS 'MatterBCMPayrollID',",
                  "CASE WHEN j3.levelidud IN ('Equity Partner','Silver Equity Partner','Fixed Share Partner') THEN RTRIM(h3.fed_code) ELSE e3.displayemployeeid END AS 'MatterBCMSpendvisionID',",
                  "case when e.leaver = 0 then 'N' else 'Y' end as 'MatterLeaver',",
                  "eMan.forename + ' ' + eMan.surname AS 'MatterManagerName',",
                  "case when eMan.payrollid is null or eMan.payrollid = '' then eMan.displayemployeeid else eMan.payrollid end AS 'MatterManagerPayrollID',",
                  "CASE WHEN jMan.levelidud IN ('Equity Partner','Silver Equity Partner','Fixed Share Partner') THEN RTRIM(hMan.fed_code) ELSE eMan.payrollid END AS 'MatterManagerSpendvisionID',",
                  "e.windowsusername as 'MatterLogin',",
                  "eBCM.knownas + ' ' + eBCM.surname as 'MatterBCMsBCM',",
                  "CASE WHEN jBCM.levelidud IN ('Equity Partner','Silver Equity Partner','Fixed Share Partner') THEN RTRIM(hBCM.fed_code) ELSE eBCM.payrollid END AS 'MatterBCMBCMSpendvision',",
                  "h1.dss_current_flag as 'MatterCurrentFlag'",
                  "",
                  "",
                  "from",
                  "red_dw.dbo.dim_fed_hierarchy_history h1 ",
                  "",
                  "left join red_dw.dbo.ds_sh_employee e",
                  " on cast(e.employeeid as varchar(36)) = h1.employeeid",
                  " and e.dss_current_flag = 'Y'",
                  "",
                  "left join red_dw.dbo.ds_sh_employee_jobs j",
                  " on j.employeeid = h1.employeeid",
                  " and j.dss_current_flag = 'Y'",
                  " and j.sys_activejob = 1",
                  "",
                  "left join ",
                  "\tred_dw.dbo.load_cascade_employee e3",
                  "  on e3.employeeid = h1.reportingbcmidud",
                  "",
                  "left join",
                  " red_dw.dbo.load_cascade_employee e4",
                  "  on e4.employeeid = h1.employeeid ",
                  "",
                  "left join red_dw.dbo.ds_sh_employee_jobs j3",
                  " on j3.employeeid = h1.reportingbcmidud",
                  " and j3.dss_current_flag = 'Y'",
                  " and j3.sys_activejob = 1",
                  "",
                  " left join red_dw.dbo.dim_fed_hierarchy_history h3",
                  "\ton h3.employeeid = j3.employeeid",
                  "\t and h3.dss_current_flag = 'Y'",
                  "\t and h3.activeud = 1",
                  "",
                  "left join red_dw.dbo.ds_sh_employee eMan",
                  " on cast(eMan.employeeid as varchar(36)) = h1.worksforemployeeid",
                  " and eMan.dss_current_flag = 'Y'",
                  "",
                  " left join red_dw.dbo.ds_sh_employee_jobs jMan",
                  " on jMan.employeeid = eMan.employeeid",
                  " and jMan.dss_current_flag = 'Y'",
                  " and jMan.sys_activejob = 1",
                  "",
                  "left join red_dw.dbo.dim_fed_hierarchy_history hMan",
                  "\ton hMan.employeeid = jMan.employeeid",
                  "\t and hMan.dss_current_flag = 'Y'",
                  "\t and hMan.activeud = 1",
                  "",
                  "left join red_dw.dbo.ds_sh_employee eBCM",
                  " on cast(eBCM.employeeid as varchar(36)) = h1.reportingbcmidud",
                  " and eBCM.dss_current_flag = 'Y'",
                  "",
                  " left join red_dw.dbo.ds_sh_employee_jobs jBCM",
                  " on jBCM.employeeid = eBCM.employeeid",
                  " and jBCM.dss_current_flag = 'Y'",
                  " and jBCM.sys_activejob = 1",
                  "",
                  "left join red_dw.dbo.dim_fed_hierarchy_history hBCM",
                  "\ton hBCM.employeeid = jBCM.employeeid",
                  "\t and hBCM.dss_current_flag = 'Y'",
                  "\t and hBCM.activeud = 1",
                  "",
                  "",
                  "",
                  "",
                  "order by 1&lt;/RSQueryCommandText&gt;&lt;RSQueryCommandType&gt;Text&lt;/RSQueryCommandType&gt;&lt;RSQueryDesignState&gt;&lt;/RSQueryDesignState&gt;]]&gt;&lt;/AnnotationContent&gt;&lt;/Gemini&gt;"
                ]
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimMatterFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimMatterFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimMatterFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "dim_employee_key,",
              "employeeid,",
              "dim_fed_hierarchy_history_key as 'MatterFEDCodeID',",
              "fed_code as 'MatterFEDCode',",
              "name as 'MatterFEDName',",
              "display_name as 'MatterFEDDisplayName',",
              "hierarchylevel2hist as 'MatterBusinessLine',",
              "hierarchylevel3hist as 'MatterPracticeArea',",
              "hierarchylevel4hist as 'MatterTeam',",
              "hierarchylevel2hist as 'MatterBusinessLine_PreFrancis',",
              "hierarchylevel3hist as 'MatterPracticeArea_PreFrancis',",
              "hierarchylevel4hist as 'MatterTeam_PreFrancis',",
              "reportingbcmname as 'MatterBCMName',",
              "worksforname    AS 'MatterSupervisorName',",
              "worksforemployeeid    AS 'worksforemployeeid',",
              "case when leaver = 1 then 'Y' else 'N' end as 'MatterLeaver',",
              "windowsusername as 'MatterLogin',",
              "dss_current_flag as 'MatterCurrentFlag',",
              "activeud as 'MatterActiveUD'",
              "--case when leaver = 1 and activeud = 0 and dss_current_flag = 'Y'  then 'Leaver' ",
              "--    when h1.activeud = 1 and h1.dss_current_flag = 'Y' and attend.type = 'Maternity' then 'Maternity'",
              "--  when h1.activeud = 0 and h1.dss_current_flag = 'Y' and e.leaver = 0 then 'Team Transfer'",
              "--end as 'AuditStatus'",
              "",
              "from",
              "red_dw.dbo.dim_fed_hierarchy_history"
            ]
          }
        ]
      },
      {
        "name": "dimClient",
        "columns": [
          {
            "name": "ClientCode",
            "dataType": "string",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "ClientCode"
          },
          {
            "name": "ClientName",
            "dataType": "string",
            "sourceColumn": "ClientName"
          },
          {
            "name": "ClientGroupName",
            "dataType": "string",
            "sourceColumn": "ClientGroupName"
          },
          {
            "name": "CreditControllerName",
            "dataType": "string",
            "sourceColumn": "CreditControllerName"
          },
          {
            "name": "SectorName",
            "dataType": "string",
            "sourceColumn": "SectorName"
          },
          {
            "name": "CRMStatus",
            "dataType": "string",
            "sourceColumn": "CRMStatus"
          },
          {
            "name": "ClientGroupCode",
            "dataType": "string",
            "sourceColumn": "ClientGroupCode"
          },
          {
            "name": "ClientPartnerCode",
            "dataType": "string",
            "sourceColumn": "ClientPartnerCode"
          },
          {
            "name": "ClientGroupCalculated",
            "dataType": "string",
            "sourceColumn": "ClientGroupCalculated"
          },
          {
            "name": "ClientID",
            "dataType": "int64",
            "sourceColumn": "ClientID"
          },
          {
            "name": "ClientCodeTrimmed",
            "dataType": "string",
            "sourceColumn": "ClientCodeTrimmed"
          },
          {
            "name": "CreditLimit",
            "dataType": "double",
            "sourceColumn": "CreditLimit"
          },
          {
            "name": "ClientType",
            "dataType": "string",
            "sourceColumn": "ClientType"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "SubSector",
            "dataType": "string",
            "sourceColumn": "SubSector"
          },
          {
            "name": "Segment",
            "dataType": "string",
            "sourceColumn": "Segment"
          }
        ],
        "partitions": [
          {
            "name": "dimClientMatter",
            "source": {
              "query": [
                "SELECT distinct",
                "c.dim_client_key as 'ClientID',",
                "c.client_code as 'ClientCode',",
                "(CASE WHEN ISNUMERIC(LEFT(c.client_code, 1)) = 0",
                "          -- If Client code starts with letter, remove all zeroes between the letter and the first non-zero number (eg. A00123 becomes A123)",
                "          THEN LEFT(c.client_code, 1) + REPLACE(LTRIM(REPLACE(RIGHT(RTRIM(c.client_code), LEN(RTRIM(c.client_code)) - 1), '0', ' ')), ' ', '0')",
                "          WHEN ISNUMERIC(c.client_code) = 1",
                "          -- If Client code is numeric, remove leading zeroes",
                "          THEN CAST(CAST(c.client_code AS int) AS varchar)",
                "          ELSE RTRIM(c.client_code)",
                "          END) as 'ClientCodeTrimmed',",
                "c.client_name as 'ClientName',",
                "c.client_group_code as 'ClientGroupCode',",
                "c.client_group_name as 'ClientGroupName',",
                "case when c.client_group_name is null then c.client_name else c.client_group_name end as 'ClientGroupCalculated',",
                "c.client_partner_code as 'ClientPartnerCode',",
                "--case",
                "--when cc.cx_data = 'SGO' then 'Stephen Gorman'",
                "--when cc.cx_data = 'AQM' then 'Ashleigh Mulligan'",
                "--when cc.cx_data = 'KWA' then 'Keith Walters'",
                "--when cc.cx_data = 'LIL' then 'Linda Lewis'",
                "--when cc.cx_data = 'JWO' then 'Jemma Woodworth'",
                "--when cc.cx_data = 'AEV' then 'Alun Evans'",
                "--when cc.cx_data = 'JEV' then 'Joanne Sawkins'",
                "--when cc.cx_data = 'KEL1' then 'Kelly Ryan'",
                "--when cc.cx_data = 'JZD' then 'Julie Dootson'",
                "--when cc.cx_data = 'JTUR' then 'Jocelyn Turner'",
                "--when cc.cx_data = 'MWN' then 'Michelle Wilson'",
                "--when cc.cx_data = 'NMB' then 'Natalie Cooney'",
                "--when cc.cx_data = 'DIA' then 'Diane Robinson'",
                "--else cc.cx_data",
                "--end ",
                "'Unknown'\tAS 'CreditControllerName',",
                "sector AS 'SectorName',",
                "  --CASE WHEN crm.cx_data = '0001' THEN 'Patron'",
                "  -- WHEN crm.cx_data = '0002' THEN 'Star' ",
                "  -- WHEN crm.cx_data is null then null ",
                "  -- ELSE 'Rising Star'END ",
                "  generator_status  AS 'CRMStatus',",
                "credit_limit as CreditLimit,",
                "client_type as ClientType,",
                "email as Email",
                ",sub_sector AS SubSector,segment AS Segment",
                "-- select *",
                " FROM ",
                "[dim_client] c",
                "",
                "",
                "--left join axxia01.dbo.caclextn  as cc",
                "-- on c.client_code = cc.cx_accode",
                "-- and cc.cx_colnum = '5'",
                "",
                "",
                "--left join axxia01.dbo.caclextn crm",
                "-- on crm.cx_accode = c.client_code",
                "-- and crm.cx_colnum = '101'"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;&lt;Gemini xmlns=\"QueryEditorSerialization\"&gt;&lt;AnnotationContent&gt;&lt;![CDATA[&lt;RSQueryCommandText&gt;SELECT distinct",
                  "c.dim_client_key as 'ClientID',",
                  "c.client_code as 'ClientCode',",
                  "(CASE WHEN ISNUMERIC(LEFT(c.client_code, 1)) = 0",
                  "          -- If Client code starts with letter, remove all zeroes between the letter and the first non-zero number (eg. A00123 becomes A123)",
                  "          THEN LEFT(c.client_code, 1) + REPLACE(LTRIM(REPLACE(RIGHT(RTRIM(c.client_code), LEN(RTRIM(c.client_code)) - 1), '0', ' ')), ' ', '0')",
                  "          WHEN ISNUMERIC(c.client_code) = 1",
                  "          -- If Client code is numeric, remove leading zeroes",
                  "          THEN CAST(CAST(c.client_code AS int) AS varchar)",
                  "          ELSE RTRIM(c.client_code)",
                  "          END) as 'ClientCodeTrimmed',",
                  "c.client_name as 'ClientName',",
                  "c.client_group_code as 'ClientGroupCode',",
                  "c.client_group_name as 'ClientGroupName',",
                  "case when c.client_group_name is null then c.client_name else c.client_group_name end as 'ClientGroupCalculated',",
                  "c.client_partner_code as 'ClientPartnerCode',",
                  "--case",
                  "--when cc.cx_data = 'SGO' then 'Stephen Gorman'",
                  "--when cc.cx_data = 'AQM' then 'Ashleigh Mulligan'",
                  "--when cc.cx_data = 'KWA' then 'Keith Walters'",
                  "--when cc.cx_data = 'LIL' then 'Linda Lewis'",
                  "--when cc.cx_data = 'JWO' then 'Jemma Woodworth'",
                  "--when cc.cx_data = 'AEV' then 'Alun Evans'",
                  "--when cc.cx_data = 'JEV' then 'Joanne Sawkins'",
                  "--when cc.cx_data = 'KEL1' then 'Kelly Ryan'",
                  "--when cc.cx_data = 'JZD' then 'Julie Dootson'",
                  "--when cc.cx_data = 'JTUR' then 'Jocelyn Turner'",
                  "--when cc.cx_data = 'MWN' then 'Michelle Wilson'",
                  "--when cc.cx_data = 'NMB' then 'Natalie Cooney'",
                  "--when cc.cx_data = 'DIA' then 'Diane Robinson'",
                  "--else cc.cx_data",
                  "--end ",
                  "'Unknown'\tAS 'CreditControllerName',",
                  "sector AS 'SectorName',",
                  "  --CASE WHEN crm.cx_data = '0001' THEN 'Patron'",
                  "  -- WHEN crm.cx_data = '0002' THEN 'Star' ",
                  "  -- WHEN crm.cx_data is null then null ",
                  "  -- ELSE 'Rising Star'END ",
                  "  generator_status  AS 'CRMStatus',",
                  "credit_limit as CreditLimit,",
                  "client_type as ClientType,",
                  "email as Email",
                  ",sub_sector AS SubSector,segment AS Segment",
                  "-- select *",
                  " FROM ",
                  "[dim_client] c",
                  "",
                  "",
                  "--left join axxia01.dbo.caclextn  as cc",
                  "-- on c.client_code = cc.cx_accode",
                  "-- and cc.cx_colnum = '5'",
                  "",
                  "",
                  "--left join axxia01.dbo.caclextn crm",
                  "-- on crm.cx_accode = c.client_code",
                  "-- and crm.cx_colnum = '101'&lt;/RSQueryCommandText&gt;&lt;RSQueryCommandType&gt;Text&lt;/RSQueryCommandType&gt;&lt;RSQueryDesignState&gt;&lt;/RSQueryDesignState&gt;]]&gt;&lt;/AnnotationContent&gt;&lt;/Gemini&gt;"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimClient"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimClientMatter"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimClientMatter"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT distinct",
              "c.dim_client_key as 'ClientID',",
              "c.client_code as 'ClientCode',",
              "(CASE WHEN ISNUMERIC(LEFT(c.client_code, 1)) = 0",
              "          -- If Client code starts with letter, remove all zeroes between the letter and the first non-zero number (eg. A00123 becomes A123)",
              "          THEN LEFT(c.client_code, 1) + REPLACE(LTRIM(REPLACE(RIGHT(RTRIM(c.client_code), LEN(RTRIM(c.client_code)) - 1), '0', ' ')), ' ', '0')",
              "          WHEN ISNUMERIC(c.client_code) = 1",
              "          -- If Client code is numeric, remove leading zeroes",
              "          THEN CAST(CAST(c.client_code AS int) AS varchar)",
              "          ELSE RTRIM(c.client_code)",
              "          END) as 'ClientCodeTrimmed',",
              "c.client_name as 'ClientName',",
              "c.client_group_code as 'ClientGroupCode',",
              "c.client_group_name as 'ClientGroupName',",
              "case when c.client_group_name is null then c.client_name else c.client_group_name end as 'ClientGroupCalculated',",
              "c.client_partner_code as 'ClientPartnerCode',",
              "case",
              "when cc.cx_data = 'SGO' then 'Stephen Gorman'",
              "when cc.cx_data = 'AQM' then 'Ashleigh Mulligan'",
              "when cc.cx_data = 'KWA' then 'Keith Walters'",
              "when cc.cx_data = 'LIL' then 'Linda Lewis'",
              "when cc.cx_data = 'JWO' then 'Jemma Woodworth'",
              "when cc.cx_data = 'AEV' then 'Alun Evans'",
              "when cc.cx_data = 'JEV' then 'Joanne Sawkins'",
              "when cc.cx_data = 'KEL1' then 'Kelly Ryan'",
              "when cc.cx_data = 'JZD' then 'Julie Dootson'",
              "when cc.cx_data = 'JTUR' then 'Jocelyn Turner'",
              "when cc.cx_data = 'MWN' then 'Michelle Wilson'",
              "when cc.cx_data = 'NMB' then 'Natalie Cooney'",
              "when cc.cx_data = 'DIA' then 'Diane Robinson'",
              "else cc.cx_data",
              "end as 'CreditControllerName',",
              "sector AS 'SectorName',",
              "  CASE WHEN crm.cx_data = '0001' THEN 'Patron'",
              "   WHEN crm.cx_data = '0002' THEN 'Star' ",
              "   WHEN crm.cx_data is null then null ",
              "   ELSE 'Rising Star' END AS 'CRMStatus',",
              "credit_limit as CreditLimit,",
              "client_type as ClientType,",
              "email as Email",
              ",sub_sector AS SubSector,segment AS Segment",
              " FROM ",
              "[dim_client] c",
              "",
              "",
              "left join sql2008svr.axxia01.dbo.caclextn  as cc",
              " on c.client_code = cc.cx_accode",
              " and cc.cx_colnum = '5'",
              "",
              "",
              "left join sql2008svr.axxia01.dbo.caclextn crm",
              " on crm.cx_accode = c.client_code",
              " and crm.cx_colnum = '101'"
            ]
          }
        ]
      },
      {
        "name": "dimDateLastBill",
        "columns": [
          {
            "name": "LastBillKey",
            "dataType": "int64",
            "sourceColumn": "LastBillKey"
          },
          {
            "name": "LastBillDate",
            "dataType": "dateTime",
            "sourceColumn": "LastBillDate"
          },
          {
            "name": "LastBillDayInMonth",
            "dataType": "int64",
            "sourceColumn": "LastBillDayInMonth"
          },
          {
            "name": "LastBillDayInYear",
            "dataType": "int64",
            "sourceColumn": "LastBillDayInYear"
          },
          {
            "name": "LastBillWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "LastBillWeekdayNo"
          },
          {
            "name": "LastBillWeekdayName",
            "dataType": "string",
            "sourceColumn": "LastBillWeekdayName"
          },
          {
            "name": "LastBillCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "LastBillCalendarWeek"
          },
          {
            "name": "LastBillCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "LastBillCalendarMonthNo"
          },
          {
            "name": "LastBillCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "LastBillCalendarMonthName"
          },
          {
            "name": "LastBillCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "LastBillCalendarQuarterNo"
          },
          {
            "name": "LastBillCalendarYear",
            "dataType": "int64",
            "sourceColumn": "LastBillCalendarYear"
          },
          {
            "name": "LastBillFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "LastBillFinancialWeek"
          },
          {
            "name": "LastBillFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "LastBillFinancialMonthNo"
          },
          {
            "name": "LastBillFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "LastBillFinancialMonthName"
          },
          {
            "name": "LastBillFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "LastBillFinancialQuarterNo"
          },
          {
            "name": "LastBillFinancialYear",
            "dataType": "int64",
            "sourceColumn": "LastBillFinancialYear"
          },
          {
            "name": "LastBillWeekend",
            "dataType": "string",
            "sourceColumn": "LastBillWeekend"
          },
          {
            "name": "LastBillHoliday",
            "dataType": "string",
            "sourceColumn": "LastBillHoliday"
          }
        ],
        "partitions": [
          {
            "name": "dimDateLastBill",
            "source": {
              "query": [
                "select",
                "dim_last_bill_date_key LastBillKey,",
                "calendar_date LastBillDate,",
                "last_bill_cal_day_in_month LastBillDayInMonth,",
                "last_bill_cal_day_in_year LastBillDayInYear,",
                "last_bill_cal_day_in_week_no LastBillWeekdayNo,",
                "last_bill_cal_day_in_week LastBillWeekdayName,",
                "last_bill_cal_week_in_year LastBillCalendarWeek,",
                "last_bill_cal_month_no LastBillCalendarMonthNo,",
                "last_bill_cal_month_name LastBillCalendarMonthName,",
                "last_bill_cal_quarter_no LastBillCalendarQuarterNo,",
                "last_bill_cal_year LastBillCalendarYear,",
                "last_bill_fin_week_in_year LastBillFinancialWeek,",
                "last_bill_fin_month_no LastBillFinancialMonthNo,",
                "last_bill_fin_month_name LastBillFinancialMonthName,",
                "last_bill_fin_quarter_no LastBillFinancialQuarterNo,",
                "last_bill_fin_year LastBillFinancialYear,",
                "last_bill_week_end_flag LastBillWeekend,",
                "last_bill_holiday_flag LastBillHoliday",
                "",
                "",
                "",
                "from",
                "dim_last_bill_date",
                "",
                "where",
                "dim_last_bill_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateLastBill"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateLastBill"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateLastBill"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_last_bill_date_key LastBillKey,",
              "calendar_date LastBillDate,",
              "last_bill_cal_day_in_month LastBillDayInMonth,",
              "last_bill_cal_day_in_year LastBillDayInYear,",
              "last_bill_cal_day_in_week_no LastBillWeekdayNo,",
              "last_bill_cal_day_in_week LastBillWeekdayName,",
              "last_bill_cal_week_in_year LastBillCalendarWeek,",
              "last_bill_cal_month_no LastBillCalendarMonthNo,",
              "last_bill_cal_month_name LastBillCalendarMonthName,",
              "last_bill_cal_quarter_no LastBillCalendarQuarterNo,",
              "last_bill_cal_year LastBillCalendarYear,",
              "last_bill_fin_week_in_year LastBillFinancialWeek,",
              "last_bill_fin_month_no LastBillFinancialMonthNo,",
              "last_bill_fin_month_name LastBillFinancialMonthName,",
              "last_bill_fin_quarter_no LastBillFinancialQuarterNo,",
              "last_bill_fin_year LastBillFinancialYear,",
              "last_bill_week_end_flag LastBillWeekend,",
              "last_bill_holiday_flag LastBillHoliday",
              "",
              "",
              "",
              "from",
              "dim_last_bill_date",
              "",
              "where",
              "dim_last_bill_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimDateLastTime",
        "columns": [
          {
            "name": "LastTimeKey",
            "dataType": "int64",
            "sourceColumn": "LastTimeKey",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeDate",
            "dataType": "dateTime",
            "sourceColumn": "LastTimeDate",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeDayInMonth",
            "dataType": "int64",
            "sourceColumn": "LastTimeDayInMonth",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeDayInYear",
            "dataType": "int64",
            "sourceColumn": "LastTimeDayInYear",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeWeekdayNo",
            "dataType": "int64",
            "sourceColumn": "LastTimeWeekdayNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeWeekdayName",
            "dataType": "string",
            "sourceColumn": "LastTimeWeekdayName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeCalendarWeek",
            "dataType": "int64",
            "sourceColumn": "LastTimeCalendarWeek",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeCalendarMonthNo",
            "dataType": "int64",
            "sourceColumn": "LastTimeCalendarMonthNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeCalendarMonthName",
            "dataType": "string",
            "sourceColumn": "LastTimeCalendarMonthName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeCalendarQuarterNo",
            "dataType": "int64",
            "sourceColumn": "LastTimeCalendarQuarterNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeCalendarYear",
            "dataType": "int64",
            "sourceColumn": "LastTimeCalendarYear",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeFinancialWeek",
            "dataType": "int64",
            "sourceColumn": "LastTimeFinancialWeek",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "LastTimeFinancialMonthNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeFinancialMonthName",
            "dataType": "string",
            "sourceColumn": "LastTimeFinancialMonthName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeFinancialQuarterNo",
            "dataType": "int64",
            "sourceColumn": "LastTimeFinancialQuarterNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeFinancialYear",
            "dataType": "int64",
            "sourceColumn": "LastTimeFinancialYear",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeWeekend",
            "dataType": "string",
            "sourceColumn": "LastTimeWeekend",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "LastTimeHoliday",
            "dataType": "string",
            "sourceColumn": "LastTimeHoliday",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimDateLastTime",
            "source": {
              "query": [
                "select",
                "dim_last_transaction_date_key LastTimeKey,",
                "calendar_date LastTimeDate,",
                "last_transaction_cal_day_in_month LastTimeDayInMonth,",
                "last_transaction_cal_day_in_year LastTimeDayInYear,",
                "last_transaction_cal_day_in_week_no LastTimeWeekdayNo,",
                "last_transaction_cal_day_in_week LastTimeWeekdayName,",
                "last_transaction_cal_week_in_year LastTimeCalendarWeek,",
                "last_transaction_cal_month_no LastTimeCalendarMonthNo,",
                "last_transaction_cal_month_name LastTimeCalendarMonthName,",
                "last_transaction_cal_quarter_no LastTimeCalendarQuarterNo,",
                "last_transaction_cal_year LastTimeCalendarYear,",
                "last_transaction_fin_week_in_year LastTimeFinancialWeek,",
                "last_transaction_fin_month_no LastTimeFinancialMonthNo,",
                "last_transaction_fin_month_name LastTimeFinancialMonthName,",
                "last_transaction_fin_quarter_no LastTimeFinancialQuarterNo,",
                "last_transaction_fin_year LastTimeFinancialYear,",
                "last_transaction_week_end_flag LastTimeWeekend,",
                "last_transaction_holiday_flag LastTimeHoliday",
                "",
                "",
                "",
                "from",
                "dim_last_transaction_date",
                "",
                "where",
                "dim_last_transaction_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateLastTime"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateLastTime"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateLastTime"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_last_transaction_date_key LastTimeKey,",
              "calendar_date LastTimeDate,",
              "last_transaction_cal_day_in_month LastTimeDayInMonth,",
              "last_transaction_cal_day_in_year LastTimeDayInYear,",
              "last_transaction_cal_day_in_week_no LastTimeWeekdayNo,",
              "last_transaction_cal_day_in_week LastTimeWeekdayName,",
              "last_transaction_cal_week_in_year LastTimeCalendarWeek,",
              "last_transaction_cal_month_no LastTimeCalendarMonthNo,",
              "last_transaction_cal_month_name LastTimeCalendarMonthName,",
              "last_transaction_cal_quarter_no LastTimeCalendarQuarterNo,",
              "last_transaction_cal_year LastTimeCalendarYear,",
              "last_transaction_fin_week_in_year LastTimeFinancialWeek,",
              "last_transaction_fin_month_no LastTimeFinancialMonthNo,",
              "last_transaction_fin_month_name LastTimeFinancialMonthName,",
              "last_transaction_fin_quarter_no LastTimeFinancialQuarterNo,",
              "last_transaction_fin_year LastTimeFinancialYear,",
              "last_transaction_week_end_flag LastTimeWeekend,",
              "last_transaction_holiday_flag LastTimeHoliday",
              "",
              "",
              "",
              "from",
              "dim_last_transaction_date",
              "",
              "where",
              "dim_last_transaction_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimDaysBanding",
        "columns": [
          {
            "name": "Number",
            "dataType": "int64",
            "sourceColumn": "Number",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "DebtAgeBanding",
            "dataType": "string",
            "sourceColumn": "DebtAgeBanding",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientAgedDebtBanding",
            "dataType": "string",
            "sourceColumn": "ClientAgedDebtBanding"
          }
        ],
        "partitions": [
          {
            "name": "dimDaysBanding",
            "source": {
              "query": [
                "select ",
                "  n as 'Number',",
                " grouping3.daysbanding as 'DebtAgeBanding',",
                "  --case when n between 0 and 30 then '0 - 30 Days'",
                "--  when n between 31 and 90 then '31 - 90 Days'",
                " -- when n between 91 and 180 then '91 - 180 Days'",
                " -- when n between 181 and 270 then '181 - 270 Days'",
                "  --when n between 271 and 360 then '271 - 360 Days'",
                "  --when n between 361 and 720 then '361 - 720 Days'",
                " -- when n > 710 then 'Over 720 Days' end as 'DebtAgeBanding',",
                "  case when n between 0 and 30 then '0 - 30 Days'",
                "  when n between 31 and 45 then '31 - 45 Days'",
                "  when n between 46 and 60 then '46 - 60 Days'",
                "  when n between 61 and 90 then '61 - 90 Days'",
                "  when n between 91 and 120 then '91 - 120 Days'",
                "  when n between 121 and 180 then '121 - 180 Days'",
                "  when n between 181 and 270 then '181 - 270 Days'",
                "  when n between 271 and 360 then '271 - 360 Days'",
                "  when n > 360 then 'Over 360 Days' end as 'ClientAgedDebtBanding'",
                "",
                "",
                "  from (",
                "  select ",
                "  top 100000",
                "  row_number() over(order by t1.number) as n",
                "  ",
                "  ",
                "  from ",
                "  master..spt_values t1   ",
                "  CROSS JOIN master..spt_values t2",
                "",
                "  ) tbl",
                "  LEFT JOIN dbo.dim_days_banding grouping3 ON n >= grouping3.startdays AND n <=grouping3.enddays AND grouping3.banding_category = 'grouping3'",
                "  union",
                "  select 0, '0 - 30 Days', '0 - 30 Days'",
                "",
                "  order by 1"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDaysBanding"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDaysBanding"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDaysBanding"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "  n as 'Number',",
              " grouping3.daysbanding as 'DebtAgeBanding',",
              "  --case when n between 0 and 30 then '0 - 30 Days'",
              "--  when n between 31 and 90 then '31 - 90 Days'",
              " -- when n between 91 and 180 then '91 - 180 Days'",
              " -- when n between 181 and 270 then '181 - 270 Days'",
              "  --when n between 271 and 360 then '271 - 360 Days'",
              "  --when n between 361 and 720 then '361 - 720 Days'",
              " -- when n > 710 then 'Over 720 Days' end as 'DebtAgeBanding',",
              "  case when n between 0 and 30 then '0 - 30 Days'",
              "  when n between 31 and 45 then '31 - 45 Days'",
              "  when n between 46 and 60 then '46 - 60 Days'",
              "  when n between 61 and 90 then '61 - 90 Days'",
              "  when n between 91 and 120 then '91 - 120 Days'",
              "  when n between 121 and 180 then '121 - 180 Days'",
              "  when n between 181 and 270 then '181 - 270 Days'",
              "  when n between 271 and 360 then '271 - 360 Days'",
              "  when n > 360 then 'Over 360 Days' end as 'ClientAgedDebtBanding'",
              "",
              "",
              "  from (",
              "  select ",
              "  top 100000",
              "  row_number() over(order by t1.number) as n",
              "  ",
              "  ",
              "  from ",
              "  master..spt_values t1   ",
              "  CROSS JOIN master..spt_values t2",
              "",
              "  ) tbl",
              "  LEFT JOIN dbo.dim_days_banding grouping3 ON n >= grouping3.startdays AND n <=grouping3.enddays AND grouping3.banding_category = 'grouping3'",
              "  union",
              "  select 0, '0 - 30 Days', '0 - 30 Days'",
              "",
              "  order by 1"
            ]
          }
        ]
      },
      {
        "name": "BillExtension",
        "columns": [
          {
            "name": "BillXFeeEarner",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "BillXFeeEarner",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXBillAmount",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BillXBillAmount",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXTimeBilled",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BillXTimeBilled",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXBillID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillXBillID"
          },
          {
            "name": "BillXBillDate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillXBillDate"
          }
        ],
        "partitions": [
          {
            "name": "BillExtension",
            "source": {
              "query": [
                "select",
                "dim_bill_date_key as BillXBillDate,",
                "dim_bill_key as 'BillXBillID',",
                "dim_fed_hierarchy_history_key as 'BillXFeeEarner',",
                "bill_amount as 'BillXBillAmount',",
                "billed_time as 'BillXTimeBilled'",
                "",
                "from",
                "red_dw.dbo.fact_bill_activity"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalBillXAmount",
            "expression": "calculate(SUM([BillXBillAmount]))"
          },
          {
            "name": "TotalBillXTimeBilled",
            "expression": "SUM([BillXTimeBilled])"
          },
          {
            "name": "ProfitCostsRank",
            "expression": "if(not(isblank([TotalBillXAmount])),rankx(filter(all(dimClient), BillExtension[TotalBillXAmount]),[TotalBillXAmount]), blank())"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "BillExtension"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BillExtension"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "BillExtension"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_bill_date_key as BillXBillDate,",
              "dim_bill_key as 'BillXBillID',",
              "dim_fed_hierarchy_history_key as 'BillXFeeEarner',",
              "bill_amount as 'BillXBillAmount',",
              "billed_time as 'BillXTimeBilled'",
              "",
              "from",
              "red_dw.dbo.fact_bill_activity"
            ]
          }
        ]
      },
      {
        "name": "dimBillXFEDHierarchy",
        "columns": [
          {
            "name": "BillXFEDCodeID",
            "dataType": "int64",
            "sourceColumn": "BillXFEDCodeID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXFEDCode",
            "dataType": "string",
            "sourceColumn": "BillXFEDCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXFEDName",
            "dataType": "string",
            "sourceColumn": "BillXFEDName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXBusinessLine",
            "dataType": "string",
            "sourceColumn": "BillXBusinessLine",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXPracticeArea",
            "dataType": "string",
            "sourceColumn": "BillXPracticeArea",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXTeam",
            "dataType": "string",
            "sourceColumn": "BillXTeam",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXBCMName",
            "dataType": "string",
            "sourceColumn": "BillXBCMName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXDisplayName",
            "dataType": "string",
            "sourceColumn": "BillXDisplayName"
          },
          {
            "name": "dim_employee_key",
            "dataType": "int64",
            "sourceColumn": "dim_employee_key"
          },
          {
            "name": "BillXBusinessLine_PreFrancis",
            "dataType": "string",
            "sourceColumn": "BillXBusinessLine_PreFrancis"
          },
          {
            "name": "BillXPracticeArea_PreFrancis",
            "dataType": "string",
            "sourceColumn": "BillXPracticeArea_PreFrancis"
          },
          {
            "name": "BillXTeam_PreFrancis",
            "dataType": "string",
            "sourceColumn": "BillXTeam_PreFrancis"
          }
        ],
        "partitions": [
          {
            "name": "dimBillXFEDHierarchy",
            "source": {
              "query": [
                "select distinct",
                "dim_fed_hierarchy_history_key as 'BillXFEDCodeID',",
                "dim_employee_key,",
                "fed_code as 'BillXFEDCode',",
                "name as 'BillXFEDName',",
                "display_name as 'BillXDisplayName',",
                "hierarchylevel2hist as 'BillXBusinessLine',",
                "hierarchylevel3hist as 'BillXPracticeArea',",
                "hierarchylevel4hist as 'BillXTeam',",
                "reportingbcmname as 'BillXBCMName',",
                "hierarchylevel2hist_pre_francis as 'BillXBusinessLine_PreFrancis',",
                "hierarchylevel3hist_pre_francis as 'BillXPracticeArea_PreFrancis',",
                "hierarchylevel4hist_pre_francis as 'BillXTeam_PreFrancis'",
                "",
                "from",
                "red_dw.dbo.dim_fed_hierarchy_history"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy",
            "levels": [
              {
                "name": "BillXBusinessLine",
                "ordinal": 0,
                "column": "BillXBusinessLine"
              },
              {
                "name": "BillXPracticeArea",
                "ordinal": 1,
                "column": "BillXPracticeArea"
              },
              {
                "name": "BillXTeam",
                "ordinal": 2,
                "column": "BillXTeam"
              },
              {
                "name": "BillXDisplayName",
                "ordinal": 3,
                "column": "BillXDisplayName"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBillXFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimBillXFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimBillXFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "dim_fed_hierarchy_history_key as 'BillXFEDCodeID',",
              "dim_employee_key,",
              "fed_code as 'BillXFEDCode',",
              "name as 'BillXFEDName',",
              "display_name as 'BillXDisplayName',",
              "hierarchylevel2hist as 'BillXBusinessLine',",
              "hierarchylevel3hist as 'BillXPracticeArea',",
              "hierarchylevel4hist as 'BillXTeam',",
              "reportingbcmname as 'BillXBCMName',",
              "hierarchylevel2hist_pre_francis as 'BillXBusinessLine_PreFrancis',",
              "hierarchylevel3hist_pre_francis as 'BillXPracticeArea_PreFrancis',",
              "hierarchylevel4hist_pre_francis as 'BillXTeam_PreFrancis'",
              "",
              "from",
              "red_dw.dbo.dim_fed_hierarchy_history"
            ]
          }
        ]
      },
      {
        "name": "dimLocalGovernmentMatters",
        "columns": [
          {
            "name": "MatterID",
            "dataType": "int64",
            "sourceColumn": "MatterID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "SectorName",
            "dataType": "string",
            "sourceColumn": "SectorName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimLocalGovernmentMatters",
            "source": {
              "query": [
                "select",
                "b.dim_matter_header_curr_key as 'MatterID',",
                "a.SectorName as 'SectorName'",
                "from",
                "",
                "sql2008svr.Reporting.Accounts.LocalGovernmentClients a",
                "",
                "inner join red_dw.dbo.fact_matter_summary b",
                " on a.Client = b.client_code",
                " and b.matter_number = a.Matter",
                " and b.fin_month = (",
                " select",
                " fin_month",
                "",
                " from",
                " red_dw.dbo.dim_date",
                "",
                " where",
                " calendar_date = cast(getdate() as date))",
                "and b.dim_matter_header_curr_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimLocalGovernmentMatters"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimLocalGovernmentMatters"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimLocalGovernmentMatters"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "b.dim_matter_header_curr_key as 'MatterID',",
              "a.SectorName as 'SectorName'",
              "from",
              "",
              "sql2008svr.Reporting.Accounts.LocalGovernmentClients a",
              "",
              "inner join red_dw.dbo.fact_matter_summary b",
              " on a.Client = b.client_code",
              " and b.matter_number = a.Matter",
              " and b.fin_month = (",
              " select",
              " fin_month",
              "",
              " from",
              " red_dw.dbo.dim_date",
              "",
              " where",
              " calendar_date = cast(getdate() as date))",
              "and b.dim_matter_header_curr_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimClientPartnerFEDHierarchy",
        "columns": [
          {
            "name": "ClientPartnerDisplayName",
            "dataType": "string",
            "sourceColumn": "ClientPartnerDisplayName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerFEDCode",
            "dataType": "string",
            "sourceColumn": "ClientPartnerFEDCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerBusinessLine",
            "dataType": "string",
            "sourceColumn": "ClientPartnerBusinessLine",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerPracticeArea",
            "dataType": "string",
            "sourceColumn": "ClientPartnerPracticeArea",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerTeam",
            "dataType": "string",
            "sourceColumn": "ClientPartnerTeam",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerSubteam",
            "dataType": "string",
            "sourceColumn": "ClientPartnerSubteam",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ClientPartnerEmailAddress",
            "dataType": "string",
            "sourceColumn": "ClientPartnerEmailAddress"
          }
        ],
        "partitions": [
          {
            "name": "dimClientPartnerFEDHierarchy",
            "source": {
              "query": [
                "select distinct",
                "f.display_name as 'ClientPartnerDisplayName',",
                "f.fed_code as 'ClientPartnerFEDCode',",
                "f.hierarchylevel2hist as 'ClientPartnerBusinessLine',",
                "f.hierarchylevel3hist as 'ClientPartnerPracticeArea',",
                "f.hierarchylevel4hist as 'ClientPartnerTeam',",
                "f.hierarchylevel5hist as 'ClientPartnerSubteam',",
                "e.workemail as 'ClientPartnerEmailAddress'",
                "",
                "from dim_fed_hierarchy_history f",
                "",
                "inner join red_dw.dbo.dim_client c",
                " on c.client_partner_code = f.fed_code",
                "",
                "left join red_dw.dbo.dim_employee e",
                "\ton f.dim_employee_key = e.dim_employee_key",
                "",
                "where ",
                "dss_current_flag = 'Y' and fed_code != 'Unknown'"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "f.display_name as 'ClientPartnerDisplayName',",
              "f.fed_code as 'ClientPartnerFEDCode',",
              "f.hierarchylevel2hist as 'ClientPartnerBusinessLine',",
              "f.hierarchylevel3hist as 'ClientPartnerPracticeArea',",
              "f.hierarchylevel4hist as 'ClientPartnerTeam',",
              "f.hierarchylevel5hist as 'ClientPartnerSubteam',",
              "e.workemail as 'ClientPartnerEmailAddress'",
              "",
              "from dim_fed_hierarchy_history f",
              "",
              "inner join red_dw.dbo.dim_client c",
              " on c.client_partner_code = f.fed_code",
              "",
              "left join red_dw.dbo.dim_employee e",
              " on f.dim_employee_key = e.dim_employee_key",
              "",
              "where ",
              "dss_current_flag = 'Y' and fed_code != 'Unknown'"
            ]
          }
        ]
      },
      {
        "name": "dimMatterGroup",
        "columns": [
          {
            "name": "MatterGroupID",
            "dataType": "int64",
            "sourceColumn": "MatterGroupID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterGroupCode",
            "dataType": "string",
            "sourceColumn": "MatterGroupCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterGroupName",
            "dataType": "string",
            "sourceColumn": "MatterGroupName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimMatterGroup",
            "source": {
              "query": [
                "select",
                "dim_matter_group_key as 'MatterGroupID',",
                "matter_group_code    as 'MatterGroupCode',",
                "matter_group_name    as 'MatterGroupName'",
                "",
                "from",
                "red_dw.dbo.dim_matter_group"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimMatterGroup"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimMatterGroup"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimMatterGroup"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_matter_group_key as 'MatterGroupID',",
              "matter_group_code    as 'MatterGroupCode',",
              "matter_group_name    as 'MatterGroupName'",
              "",
              "from",
              "red_dw.dbo.dim_matter_group"
            ]
          }
        ]
      },
      {
        "name": "dimDepartment",
        "columns": [
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "DepartmentCode",
            "dataType": "string",
            "sourceColumn": "DepartmentCode"
          },
          {
            "name": "DepartmentName",
            "dataType": "string",
            "sourceColumn": "DepartmentName"
          }
        ],
        "partitions": [
          {
            "name": "dim_department",
            "source": {
              "query": [
                "select ",
                "dim_department_key as DepartmentID,",
                "department_code as 'DepartmentCode',",
                "department_name as 'DepartmentName'",
                "",
                "from ",
                "dim_department"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDepartment"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_department"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dim_department"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "dim_department_key as DepartmentID,",
              "department_code as 'DepartmentCode',",
              "department_name as 'DepartmentName'",
              "",
              "from ",
              "dim_department"
            ]
          }
        ]
      },
      {
        "name": "dim_instruction_type",
        "columns": [
          {
            "name": "dim_instruction_type_key",
            "dataType": "int64",
            "sourceColumn": "dim_instruction_type_key",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "instruction_type",
            "dataType": "string",
            "sourceColumn": "instruction_type",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "dss_create_time",
            "dataType": "dateTime",
            "sourceColumn": "dss_create_time",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "dss_update_time",
            "dataType": "dateTime",
            "sourceColumn": "dss_update_time",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dim_instruction_type",
            "source": {
              "query": "SELECT [dbo].[dim_instruction_type].* \t\tFROM [dbo].[dim_instruction_type]",
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "False"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dim_instruction_type"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_instruction_type"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dim_instruction_type"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "      SELECT [dbo].[dim_instruction_type].*   FROM [dbo].[dim_instruction_type] "
          }
        ]
      },
      {
        "name": "dimMatterEmployee",
        "columns": [
          {
            "name": "MatterEmployeeCascadeEmployeeID",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeCascadeEmployeeID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeePayrollID",
            "dataType": "string",
            "sourceColumn": "MatterEmployeePayrollID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeForename",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeForename",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeSurname",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeSurname",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeEmailAddress",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeEmailAddress",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeLocation",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeLocation",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeLevelIDUD",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeLevelIDUD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeBCMEmail",
            "dataType": "string",
            "sourceColumn": "MatterEmployeeBCMEmail",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MatterEmployeeLeaverLastWorkDate",
            "dataType": "dateTime",
            "sourceColumn": "MatterEmployeeLeaverLastWorkDate",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "dim_employee_key",
            "dataType": "int64",
            "sourceColumn": "dim_employee_key"
          }
        ],
        "partitions": [
          {
            "name": "dimMatterEmployee",
            "source": {
              "query": [
                "select ",
                "dim_employee_key,",
                "employeeid as 'MatterEmployeeCascadeEmployeeID',",
                "payrollid as 'MatterEmployeePayrollID',",
                "forename as 'MatterEmployeeForename',",
                "surname as 'MatterEmployeeSurname',",
                "workemail as 'MatterEmployeeEmailAddress',",
                "locationidud as 'MatterEmployeeLocation',",
                "levelidud as 'MatterEmployeeLevelIDUD',",
                "worksforemail as 'MatterEmployeeBCMEmail',",
                "leaverlastworkdate as 'MatterEmployeeLeaverLastWorkDate'",
                "",
                "from",
                "red_dw.dbo.dim_employee"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimMatterEmployee"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimMatterEmployee"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimMatterEmployee"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "dim_employee_key,",
              "employeeid as 'MatterEmployeeCascadeEmployeeID',",
              "payrollid as 'MatterEmployeePayrollID',",
              "forename as 'MatterEmployeeForename',",
              "surname as 'MatterEmployeeSurname',",
              "workemail as 'MatterEmployeeEmailAddress',",
              "locationidud as 'MatterEmployeeLocation',",
              "levelidud as 'MatterEmployeeLevelIDUD',",
              "worksforemail as 'MatterEmployeeBCMEmail',",
              "leaverlastworkdate as 'MatterEmployeeLeaverLastWorkDate'",
              "",
              "from",
              "red_dw.dbo.dim_employee"
            ]
          }
        ]
      },
      {
        "name": "dimBillXEmployee",
        "columns": [
          {
            "name": "dim_employee_key",
            "dataType": "int64",
            "sourceColumn": "dim_employee_key",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXEmployeeEmailAddress",
            "dataType": "string",
            "sourceColumn": "BillXEmployeeEmailAddress",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXEmployeeBCMEmail",
            "dataType": "string",
            "sourceColumn": "BillXEmployeeBCMEmail",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimBillXEmployee",
            "source": {
              "query": [
                "select ",
                "dim_employee_key,",
                "workemail as 'BillXEmployeeEmailAddress',",
                "worksforemail as 'BillXEmployeeBCMEmail'",
                "",
                "from",
                "red_dw.dbo.dim_employee"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBillXEmployee"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimBillXEmployee"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimBillXEmployee"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "dim_employee_key,",
              "workemail as 'BillXEmployeeEmailAddress',",
              "worksforemail as 'BillXEmployeeBCMEmail'",
              "",
              "from",
              "red_dw.dbo.dim_employee"
            ]
          }
        ]
      },
      {
        "name": "dimDateBillXDate",
        "columns": [
          {
            "name": "BillXDateKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BillXDateKey",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXDateDate",
            "dataType": "dateTime",
            "sourceColumn": "BillXDateDate",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXDateFinancialMonthNo",
            "dataType": "int64",
            "sourceColumn": "BillXDateFinancialMonthNo",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "BillXDateFinancialYear",
            "dataType": "int64",
            "sourceColumn": "BillXDateFinancialYear",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimDateBillXDate",
            "source": {
              "query": [
                "select",
                "dim_bill_date_key as 'BillXDateKey',",
                "bill_date as 'BillXDateDate',",
                "bill_fin_month_no as 'BillXDateFinancialMonthNo',",
                "bill_fin_year as 'BillXDateFinancialYear'",
                "",
                "",
                "from",
                "red_dw.dbo.dim_bill_date",
                "",
                "where",
                "dim_bill_date_key > 0"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDateBillXDate"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDateBillXDate"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDateBillXDate"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_bill_date_key as 'BillXDateKey',",
              "bill_date as 'BillXDateDate',",
              "bill_fin_month_no as 'BillXDateFinancialMonthNo',",
              "bill_fin_year as 'BillXDateFinancialYear'",
              "",
              "",
              "from",
              "red_dw.dbo.dim_bill_date",
              "",
              "where",
              "dim_bill_date_key > 0"
            ]
          }
        ]
      },
      {
        "name": "dimClientInvolvement",
        "columns": [
          {
            "name": "InsuredClientName",
            "dataType": "string",
            "sourceColumn": "InsuredClientName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "InsurerClientName",
            "dataType": "string",
            "sourceColumn": "InsurerClientName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "InsuredClientReference",
            "dataType": "string",
            "sourceColumn": "InsuredClientReference",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "InsurerClientReference",
            "dataType": "string",
            "sourceColumn": "InsurerClientReference",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "DimClientInvolvementKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DimClientInvolvementKey"
          },
          {
            "name": "ClientContactName",
            "dataType": "string",
            "sourceColumn": "ClientContactName"
          }
        ],
        "partitions": [
          {
            "name": "dimClientInvolvement",
            "source": {
              "query": [
                "select",
                "dim_client_involvement_key as DimClientInvolvementKey,",
                "insuredclient_name as InsuredClientName,",
                "insurerclient_name as InsurerClientName,",
                "insuredclient_reference as InsuredClientReference,",
                "insurerclient_reference as InsurerClientReference,",
                "clientcontact_name as ClientContactName",
                "",
                "from",
                "red_dw.dbo.dim_client_involvement"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimClientInvolvement"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimClientInvolvement"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimClientInvolvement"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_client_involvement_key as DimClientInvolvementKey,",
              "insuredclient_name as InsuredClientName,",
              "insurerclient_name as InsurerClientName,",
              "insuredclient_reference as InsuredClientReference,",
              "insurerclient_reference as InsurerClientReference,",
              "clientcontact_name as ClientContactName",
              "",
              "from",
              "red_dw.dbo.dim_client_involvement"
            ]
          }
        ]
      },
      {
        "name": "dimDetailCoreDetails",
        "columns": [
          {
            "name": "DimDetailCoreDetailKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DimDetailCoreDetailKey",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "InsuredSector",
            "dataType": "string",
            "sourceColumn": "InsuredSector",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimDetailCoreDetails",
            "source": {
              "query": [
                "select",
                "dim_detail_core_detail_key as DimDetailCoreDetailKey,",
                "insured_sector as InsuredSector",
                "",
                "from",
                "red_dw.dbo.dim_detail_core_details"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimDetailCoreDetails"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimDetailCoreDetails"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimDetailCoreDetails"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_detail_core_detail_key as DimDetailCoreDetailKey,",
              "insured_sector as InsuredSector",
              "",
              "from",
              "red_dw.dbo.dim_detail_core_details"
            ]
          }
        ]
      },
      {
        "name": "dimMasterClient",
        "columns": [
          {
            "name": "MasterClientKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MasterClientKey",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientCode",
            "dataType": "string",
            "sourceColumn": "MasterClientCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientName",
            "dataType": "string",
            "sourceColumn": "MasterClientName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerCode",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerName",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimMasterClient",
            "source": {
              "query": [
                "select",
                "dim_client_key as MasterClientKey,",
                "client_code as MasterClientCode,",
                "client_name as MasterClientName,",
                "client_partner_code as MasterClientPartnerCode,",
                "client_partner_name as MasterClientPartnerName",
                "",
                "from",
                "dim_client"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimMasterClient"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimMasterClient"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimMasterClient"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "dim_client_key as MasterClientKey,",
              "client_code as MasterClientCode,",
              "client_name as MasterClientName,",
              "client_partner_code as MasterClientPartnerCode,",
              "client_partner_name as MasterClientPartnerName",
              "",
              "from",
              "dim_client"
            ]
          }
        ]
      },
      {
        "name": "dimMasterClientPartnerFEDHierarchy",
        "columns": [
          {
            "name": "MasterClientPartnerDisplayName",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerDisplayName",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerFEDCode",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerFEDCode",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerBusinessLine",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerBusinessLine",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerPracticeArea",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerPracticeArea",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerTeam",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerTeam",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerSubteam",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerSubteam",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "MasterClientPartnerEmailAddress",
            "dataType": "string",
            "sourceColumn": "MasterClientPartnerEmailAddress",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimMasterClientPartnerFEDHierarchy",
            "source": {
              "query": [
                "select distinct",
                "f.display_name as 'MasterClientPartnerDisplayName',",
                "f.fed_code as 'MasterClientPartnerFEDCode',",
                "f.hierarchylevel2hist as 'MasterClientPartnerBusinessLine',",
                "f.hierarchylevel3hist as 'MasterClientPartnerPracticeArea',",
                "f.hierarchylevel4hist as 'MasterClientPartnerTeam',",
                "f.hierarchylevel5hist as 'MasterClientPartnerSubteam',",
                "e.workemail as 'MasterClientPartnerEmailAddress'",
                "",
                "from dim_fed_hierarchy_history f",
                "",
                "inner join red_dw.dbo.dim_client c",
                " on c.client_partner_code = f.fed_code",
                "",
                "left join red_dw.dbo.dim_employee e",
                " on f.dim_employee_key = e.dim_employee_key",
                "",
                "where ",
                "dss_current_flag = 'Y' and fed_code != 'Unknown'"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "True"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimMasterClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimMasterClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimMasterClientPartnerFEDHierarchy"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "f.display_name as 'MasterClientPartnerDisplayName',",
              "f.fed_code as 'MasterClientPartnerFEDCode',",
              "f.hierarchylevel2hist as 'MasterClientPartnerBusinessLine',",
              "f.hierarchylevel3hist as 'MasterClientPartnerPracticeArea',",
              "f.hierarchylevel4hist as 'MasterClientPartnerTeam',",
              "f.hierarchylevel5hist as 'MasterClientPartnerSubteam',",
              "e.workemail as 'MasterClientPartnerEmailAddress'",
              "",
              "from dim_fed_hierarchy_history f",
              "",
              "inner join red_dw.dbo.dim_client c",
              " on c.client_partner_code = f.fed_code",
              "",
              "left join red_dw.dbo.dim_employee e",
              " on f.dim_employee_key = e.dim_employee_key",
              "",
              "where ",
              "dss_current_flag = 'Y' and fed_code != 'Unknown'"
            ]
          }
        ]
      },
      {
        "name": "dim_detail_outcome",
        "columns": [
          {
            "name": "dim_detail_outcome_key",
            "dataType": "int64",
            "sourceColumn": "dim_detail_outcome_key",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "source_system_id",
            "dataType": "int64",
            "sourceColumn": "source_system_id",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "client_code",
            "dataType": "string",
            "sourceColumn": "client_code",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "matter_number",
            "dataType": "string",
            "sourceColumn": "matter_number",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "aig_has_there_been_a_mediation",
            "dataType": "string",
            "sourceColumn": "aig_has_there_been_a_mediation",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "aig_outcome_of_instruction",
            "dataType": "string",
            "sourceColumn": "aig_outcome_of_instruction",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "aig_where_you_have_had_a_trial_were_you_successful",
            "dataType": "string",
            "sourceColumn": "aig_where_you_have_had_a_trial_were_you_successful",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "are_we_pursuing_a_recovery",
            "dataType": "string",
            "sourceColumn": "are_we_pursuing_a_recovery",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "capita_interim_payment_made",
            "dataType": "string",
            "sourceColumn": "capita_interim_payment_made",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "costs_outcome",
            "dataType": "string",
            "sourceColumn": "costs_outcome",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "disease_are_we_dealing_with_the_costs",
            "dataType": "string",
            "sourceColumn": "disease_are_we_dealing_with_the_costs",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "global_settlement",
            "dataType": "string",
            "sourceColumn": "global_settlement",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "grpageas_name_of_costs_negotiator",
            "dataType": "string",
            "sourceColumn": "grpageas_name_of_costs_negotiator",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "grpageas_reason_colossus_exceeded",
            "dataType": "string",
            "sourceColumn": "grpageas_reason_colossus_exceeded",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "liability_outcome",
            "dataType": "string",
            "sourceColumn": "liability_outcome",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ll00_settlement_basis",
            "dataType": "string",
            "sourceColumn": "ll00_settlement_basis",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ll28_provisional_damages_paid",
            "dataType": "string",
            "sourceColumn": "ll28_provisional_damages_paid",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_client_liability",
            "dataType": "string",
            "sourceColumn": "percent_client_liability",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "claim_status",
            "dataType": "string",
            "sourceColumn": "claim_status",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "complaint_received",
            "dataType": "int64",
            "sourceColumn": "complaint_received",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_indemnity_settled",
            "dataType": "dateTime",
            "sourceColumn": "date_indemnity_settled",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "excluded",
            "dataType": "string",
            "sourceColumn": "excluded",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "exclude_from_reports",
            "dataType": "int64",
            "sourceColumn": "exclude_from_reports",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "filestatus_1",
            "dataType": "string",
            "sourceColumn": "filestatus_1",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "filestatus_2",
            "dataType": "string",
            "sourceColumn": "filestatus_2",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "lifecycle_of_claim",
            "dataType": "int64",
            "sourceColumn": "lifecycle_of_claim",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "nmi114_flag",
            "dataType": "string",
            "sourceColumn": "nmi114_flag",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "nmi126_wps048_coalesce",
            "dataType": "string",
            "sourceColumn": "nmi126_wps048_coalesce",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "outcome",
            "dataType": "string",
            "sourceColumn": "outcome",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "reason_for_success",
            "dataType": "string",
            "sourceColumn": "reason_for_success",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "repudiated",
            "dataType": "string",
            "sourceColumn": "repudiated",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "settled_without_hearing",
            "dataType": "int64",
            "sourceColumn": "settled_without_hearing",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "status_historic",
            "dataType": "string",
            "sourceColumn": "status_historic",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "struckout",
            "dataType": "int64",
            "sourceColumn": "struckout",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "success_at_trial_1",
            "dataType": "string",
            "sourceColumn": "success_at_trial_1",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "tab2",
            "dataType": "int64",
            "sourceColumn": "tab2",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "local_gov_rmg_action_requiredlessons_learned",
            "dataType": "string",
            "sourceColumn": "local_gov_rmg_action_requiredlessons_learned",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "mib_fraud_settlement_basis",
            "dataType": "string",
            "sourceColumn": "mib_fraud_settlement_basis",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "mib_grp_costs_negotiators_used",
            "dataType": "string",
            "sourceColumn": "mib_grp_costs_negotiators_used",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "mib_name_of_costs_negotiators",
            "dataType": "string",
            "sourceColumn": "mib_name_of_costs_negotiators",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "mib_unit_total",
            "dataType": "string",
            "sourceColumn": "mib_unit_total",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "capita_date_final_fee_paid",
            "dataType": "dateTime",
            "sourceColumn": "capita_date_final_fee_paid",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_claim_concluded",
            "dataType": "dateTime",
            "sourceColumn": "date_claim_concluded",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_claimants_costs_received",
            "dataType": "dateTime",
            "sourceColumn": "date_claimants_costs_received",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "coop_fraud_pav_payment_made",
            "dataType": "double",
            "sourceColumn": "coop_fraud_pav_payment_made",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "grpageas_percent_of_our_clients_liability",
            "dataType": "double",
            "sourceColumn": "grpageas_percent_of_our_clients_liability",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_estimate_of_reduction_for_litigation_risk",
            "dataType": "double",
            "sourceColumn": "percent_estimate_of_reduction_for_litigation_risk",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_of_contributory_negligence_agreed",
            "dataType": "double",
            "sourceColumn": "percent_of_contributory_negligence_agreed",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_success_fee_claimed",
            "dataType": "double",
            "sourceColumn": "percent_success_fee_claimed",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_success_fee_paid",
            "dataType": "double",
            "sourceColumn": "percent_success_fee_paid",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "recovery_claimants_our_client_damages",
            "dataType": "double",
            "sourceColumn": "recovery_claimants_our_client_damages",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_costs_settled",
            "dataType": "dateTime",
            "sourceColumn": "date_costs_settled",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_of_detailed_assessment",
            "dataType": "dateTime",
            "sourceColumn": "date_of_detailed_assessment",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_of_issue_of_n252_and_bill",
            "dataType": "dateTime",
            "sourceColumn": "date_of_issue_of_n252_and_bill",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_of_issue_of_part_8_proceedings",
            "dataType": "dateTime",
            "sourceColumn": "date_of_issue_of_part_8_proceedings",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_of_provisional_assessment",
            "dataType": "dateTime",
            "sourceColumn": "date_of_provisional_assessment",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_of_tenth_interim_damages_payment",
            "dataType": "dateTime",
            "sourceColumn": "date_of_tenth_interim_damages_payment",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_points_of_dispute_filed",
            "dataType": "dateTime",
            "sourceColumn": "date_points_of_dispute_filed",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "date_referral_to_costs_unit",
            "dataType": "dateTime",
            "sourceColumn": "date_referral_to_costs_unit",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "grpageas_date_of_referral_to_costs_unit",
            "dataType": "dateTime",
            "sourceColumn": "grpageas_date_of_referral_to_costs_unit",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "mib_grp_zurich_pizza_hut_date_of_final_bill",
            "dataType": "dateTime",
            "sourceColumn": "mib_grp_zurich_pizza_hut_date_of_final_bill",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "sabre_admin_closure_date",
            "dataType": "dateTime",
            "sourceColumn": "sabre_admin_closure_date",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "zurich_result_date",
            "dataType": "dateTime",
            "sourceColumn": "zurich_result_date",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "outcome_of_case",
            "dataType": "string",
            "sourceColumn": "outcome_of_case",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "peel_ports_outcome",
            "dataType": "string",
            "sourceColumn": "peel_ports_outcome",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "percent_of_contribution_from_other_insurers",
            "dataType": "string",
            "sourceColumn": "percent_of_contribution_from_other_insurers",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "police_was_this_a_jury_trial",
            "dataType": "string",
            "sourceColumn": "police_was_this_a_jury_trial",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "qbe_exclude_from_report",
            "dataType": "string",
            "sourceColumn": "qbe_exclude_from_report",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "settlement_on_litigation_risk_basis",
            "dataType": "string",
            "sourceColumn": "settlement_on_litigation_risk_basis",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "zurich_recovery_does_the_claimant_have_a_cfa_indicator",
            "dataType": "string",
            "sourceColumn": "zurich_recovery_does_the_claimant_have_a_cfa_indicator",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "zurich_result_method",
            "dataType": "string",
            "sourceColumn": "zurich_result_method",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "dss_create_time",
            "dataType": "dateTime",
            "sourceColumn": "dss_create_time",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "dss_update_time",
            "dataType": "dateTime",
            "sourceColumn": "dss_update_time",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "liability_admitted",
            "dataType": "string",
            "sourceColumn": "liability_admitted",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "et_outcome_group",
            "dataType": "string",
            "sourceColumn": "et_outcome_group",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "outcome_hr",
            "dataType": "string",
            "sourceColumn": "outcome_hr",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "final_bill_date_grp",
            "dataType": "dateTime",
            "sourceColumn": "final_bill_date_grp",
            "formatString": "General Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneral\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "groupama_outcome",
            "dataType": "string",
            "sourceColumn": "groupama_outcome",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "outcome_of_instruction",
            "dataType": "string",
            "sourceColumn": "outcome_of_instruction",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "grpageas_hourly_judgment",
            "dataType": "string",
            "sourceColumn": "grpageas_hourly_judgment",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "judgment_entered",
            "dataType": "string",
            "sourceColumn": "judgment_entered",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dim_detail_outcome",
            "source": {
              "query": "SELECT [dbo].[dim_detail_outcome].* \t\tFROM [dbo].[dim_detail_outcome]",
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "IsQueryEditorUsed",
                "value": "False"
              },
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dim_detail_outcome"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_detail_outcome"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dim_detail_outcome"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "      SELECT [dbo].[dim_detail_outcome].*   FROM [dbo].[dim_detail_outcome] "
          }
        ]
      },
      {
        "name": "dimBillPayorBridge",
        "isHidden": true,
        "columns": [
          {
            "name": "BillID",
            "dataType": "int64",
            "sourceColumn": "BillID"
          },
          {
            "name": "Payor Name",
            "dataType": "string",
            "sourceColumn": "Payor Name"
          },
          {
            "name": "PayorID",
            "dataType": "int64",
            "sourceColumn": "PayorID"
          }
        ],
        "partitions": [
          {
            "name": "dimPayorName",
            "source": {
              "query": [
                "/*Bridging table for Payor Name*/",
                "  SELECT        dim_bill_key  as 'BillID'",
                "               ,payor_name AS 'Payor Name'",
                "      ,dim_payor.dim_payor_key AS 'PayorID'",
                "  FROM [red_dw].[dbo].[fact_payor_debt_detail] ",
                "  JOIN  [red_dw].[dbo].[dim_payor] ON dim_payor.dim_payor_key = fact_payor_debt_detail.dim_payor_key"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;&lt;Gemini xmlns=\"QueryEditorSerialization\"&gt;&lt;AnnotationContent&gt;&lt;![CDATA[&lt;RSQueryCommandText&gt;/*Bridging table for Payor Name*/",
                  "  SELECT        dim_bill_key  as 'BillID'",
                  "               ,payor_name AS 'Payor Name'",
                  "      ,dim_payor.dim_payor_key AS 'PayorID'",
                  "  FROM [red_dw].[dbo].[fact_payor_debt_detail] ",
                  "  JOIN  [red_dw].[dbo].[dim_payor] ON dim_payor.dim_payor_key = fact_payor_debt_detail.dim_payor_key&lt;/RSQueryCommandText&gt;&lt;RSQueryCommandType&gt;Text&lt;/RSQueryCommandType&gt;&lt;RSQueryDesignState&gt;&lt;/RSQueryDesignState&gt;]]&gt;&lt;/AnnotationContent&gt;&lt;/Gemini&gt;"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimBillPayorBridge"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimPayorName"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimPayorName"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "/*Bridging table for Payor Name*/",
              "  SELECT        dim_bill_key  as 'BillID'",
              "               ,payor_name AS 'Payor Name'",
              "      ,dim_payor.dim_payor_key AS 'PayorID'",
              "  FROM [red_dw].[dbo].[fact_payor_debt_detail] ",
              "  JOIN  [red_dw].[dbo].[dim_payor] ON dim_payor.dim_payor_key = fact_payor_debt_detail.dim_payor_key"
            ]
          }
        ]
      },
      {
        "name": "dimPayor",
        "columns": [
          {
            "name": "PayorID",
            "dataType": "int64",
            "sourceColumn": "PayorID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "Payor Name",
            "dataType": "string",
            "sourceColumn": "Payor Name",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" xmlns=\"\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "dimPayorName2",
            "source": {
              "query": [
                "/*Payor Name*/",
                "  SELECT       ",
                "               ",
                "        dim_payor.dim_payor_key AS 'PayorID'",
                "       ,payor_name AS 'Payor Name'",
                "  FROM  [red_dw].[dbo].[dim_payor]"
              ],
              "dataSource": "SqlServer svr-liv-dw-01 red_dw"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "&lt;?xml version=\"1.0\" encoding=\"UTF-16\"?&gt;&lt;Gemini xmlns=\"QueryEditorSerialization\"&gt;&lt;AnnotationContent&gt;&lt;![CDATA[&lt;RSQueryCommandText&gt;/*Payor Name*/",
                  "  SELECT       ",
                  "               ",
                  "        dim_payor.dim_payor_key AS 'PayorID'",
                  "       ,payor_name AS 'Payor Name'",
                  "  FROM  [red_dw].[dbo].[dim_payor]&lt;/RSQueryCommandText&gt;&lt;RSQueryCommandType&gt;Text&lt;/RSQueryCommandType&gt;&lt;RSQueryDesignState&gt;&lt;/RSQueryDesignState&gt;]]&gt;&lt;/AnnotationContent&gt;&lt;/Gemini&gt;"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_IsLogical",
            "value": "True"
          },
          {
            "name": "_TM_ExtProp_FriendlyName",
            "value": "dimPayor"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimPayorName2"
          },
          {
            "name": "_TM_ExtProp_TableType",
            "value": "View"
          },
          {
            "name": "_TM_ExtProp_Description",
            "value": "dimPayorName2"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "/*Payor Name*/",
              "  SELECT       ",
              "               ",
              "        dim_payor.dim_payor_key AS 'PayorID'",
              "       ,payor_name AS 'Payor Name'",
              "  FROM  [red_dw].[dbo].[dim_payor]"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "2a18f54d-7cec-44c0-81fd-0619bb979954",
        "fromTable": "Matters",
        "fromColumn": "FEDCodeID",
        "toTable": "dimMatterFEDHierarchy",
        "toColumn": "MatterFEDCodeID"
      },
      {
        "name": "5c7b5c54-71f3-4186-9e2f-f15e18478ee0",
        "fromTable": "Matters",
        "fromColumn": "DateMatterOpen",
        "toTable": "dimDateMatterOpened",
        "toColumn": "DateMatterOpenedKey"
      },
      {
        "name": "f224bab5-9bd9-4b67-b53f-d8a332d47c3b",
        "fromTable": "Matters",
        "fromColumn": "DateMatterClosed",
        "toTable": "dimDateMatterClosed",
        "toColumn": "DateMatterClosedKey"
      },
      {
        "name": "edcaef17-f546-4ae0-ae98-af15eb7adea2",
        "fromTable": "Matters",
        "fromColumn": "LastBillDate",
        "toTable": "dimDateLastBill",
        "toColumn": "LastBillKey"
      },
      {
        "name": "e324e367-1e5c-4782-924a-9cc9c0480fdc",
        "fromTable": "Matters",
        "fromColumn": "LastTimeDate",
        "toTable": "dimDateLastTime",
        "toColumn": "LastTimeKey"
      },
      {
        "name": "e3d17c74-abcf-4b3b-affd-710bd2e38141",
        "fromTable": "Matters",
        "fromColumn": "MatterID",
        "toTable": "dimLocalGovernmentMatters",
        "toColumn": "MatterID"
      },
      {
        "name": "44f900ac-7cdb-40d4-9989-88ca85c4438b",
        "fromTable": "Matters",
        "fromColumn": "ClientID",
        "toTable": "dimClient",
        "toColumn": "ClientID"
      },
      {
        "name": "c624c4f9-ea1d-4ae7-b126-b4be406c6a06",
        "fromTable": "Matters",
        "fromColumn": "BranchID",
        "toTable": "dimBranch",
        "toColumn": "BranchID"
      },
      {
        "name": "1b0d63fa-cce5-4529-8392-c8a24d40a626",
        "fromTable": "Matters",
        "fromColumn": "WorkTypeID",
        "toTable": "dimWorkType",
        "toColumn": "WorkTypeID"
      },
      {
        "name": "39eddc27-19cc-49d5-8520-d27cec8ce732",
        "fromTable": "Matters",
        "fromColumn": "MatterGroupID",
        "toTable": "dimMatterGroup",
        "toColumn": "MatterGroupID"
      },
      {
        "name": "12a63110-f3b1-433c-a38c-5fa56941fbdd",
        "fromTable": "Matters",
        "fromColumn": "DepartmentID",
        "toTable": "dimDepartment",
        "toColumn": "DepartmentID"
      },
      {
        "name": "01109e96-9a47-413d-b88a-cde3279c8bda",
        "fromTable": "Matters",
        "fromColumn": "dim_instruction_type_key",
        "toTable": "dim_instruction_type",
        "toColumn": "dim_instruction_type_key"
      },
      {
        "name": "672f8d44-b8ab-494d-bb5a-a373e1ea2e38",
        "fromTable": "Matters",
        "fromColumn": "DimClientInvolvementKey",
        "toTable": "dimClientInvolvement",
        "toColumn": "DimClientInvolvementKey"
      },
      {
        "name": "c440cc69-5084-43c8-abcf-37d15f643071",
        "fromTable": "Matters",
        "fromColumn": "DimDetailCoreDetailKey",
        "toTable": "dimDetailCoreDetails",
        "toColumn": "DimDetailCoreDetailKey"
      },
      {
        "name": "18d44c5b-68ee-43d2-bd86-a071b763dbe4",
        "fromTable": "Matters",
        "fromColumn": "MasterClientKey",
        "toTable": "dimMasterClient",
        "toColumn": "MasterClientKey"
      },
      {
        "name": "a22449bd-8a9c-4d11-baf5-0d321b8e3945",
        "fromTable": "Matters",
        "fromColumn": "OutcomeKey",
        "toTable": "dim_detail_outcome",
        "toColumn": "dim_detail_outcome_key"
      },
      {
        "name": "535af434-16d6-4286-8349-6d780971e47f",
        "fromTable": "Bills",
        "fromColumn": "BillFinalOrInterimCode",
        "toTable": "dimBillFinalOrInterim",
        "toColumn": "BillFinalOrInterimCode"
      },
      {
        "name": "69282755-f53e-4e04-ae35-73a08e5cd29c",
        "fromTable": "Bills",
        "fromColumn": "BillTypeCode",
        "toTable": "dimBillType",
        "toColumn": "BillTypeCode"
      },
      {
        "name": "ffe4bb5c-8c5a-4048-a134-ca863b29a400",
        "fromTable": "Bills",
        "fromColumn": "BillDate",
        "toTable": "dimDateBillDate",
        "toColumn": "BillDateKey"
      },
      {
        "name": "d47e7fa1-fb72-434b-a258-1041d566d863",
        "fromTable": "Bills",
        "fromColumn": "MatterID",
        "toTable": "Matters",
        "toColumn": "MatterID"
      },
      {
        "name": "dce48dc6-d467-456d-9ec6-e3534a274ce0",
        "fromTable": "Bills",
        "fromColumn": "BillLastPaymentDate",
        "toTable": "dimDateBillLastPayment",
        "toColumn": "DateBillLastPaymentKey"
      },
      {
        "name": "fd6a6051-df6a-4bbc-994e-289717186458",
        "fromTable": "Bills",
        "fromColumn": "BillAgeDays",
        "toTable": "dimDaysBanding",
        "toColumn": "Number"
      },
      {
        "name": "0eac3b2a-d9c6-4178-ba2a-fb6d8d3c98b4",
        "fromTable": "dimMatterFEDHierarchy",
        "fromColumn": "dim_employee_key",
        "toTable": "dimMatterEmployee",
        "toColumn": "dim_employee_key"
      },
      {
        "name": "a9dc7290-856b-46f1-899e-b01f207304a1",
        "fromTable": "dimClient",
        "fromColumn": "ClientPartnerCode",
        "toTable": "dimClientPartnerFEDHierarchy",
        "toColumn": "ClientPartnerFEDCode"
      },
      {
        "name": "aac5edfa-d5af-4a9f-a338-f62710c963cf",
        "fromTable": "BillExtension",
        "fromColumn": "BillXFeeEarner",
        "toTable": "dimBillXFEDHierarchy",
        "toColumn": "BillXFEDCodeID"
      },
      {
        "name": "a6ae78b2-9f13-470e-92f4-4cfa325d6f8d",
        "fromTable": "BillExtension",
        "fromColumn": "BillXBillID",
        "toTable": "Bills",
        "toColumn": "BillID"
      },
      {
        "name": "7503b37d-6c9a-482a-abd1-975605d01e65",
        "fromTable": "BillExtension",
        "fromColumn": "BillXBillDate",
        "toTable": "dimDateBillXDate",
        "toColumn": "BillXDateKey"
      },
      {
        "name": "2fac9177-8cdd-43dc-8d76-10fef1a56494",
        "fromTable": "dimBillXFEDHierarchy",
        "fromColumn": "dim_employee_key",
        "toTable": "dimBillXEmployee",
        "toColumn": "dim_employee_key"
      },
      {
        "name": "b7c23e3e-608d-44a2-9845-2137923770b9",
        "fromTable": "dimMasterClient",
        "fromColumn": "MasterClientPartnerCode",
        "toTable": "dimMasterClientPartnerFEDHierarchy",
        "toColumn": "MasterClientPartnerFEDCode"
      },
      {
        "name": "3279e945-62e1-4fac-9a3f-23fe36f52dd7",
        "fromTable": "dimBillPayorBridge",
        "fromColumn": "BillID",
        "toTable": "Bills",
        "toColumn": "BillID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "2a01116b-2cc9-4f70-a3af-dee02ab86788",
        "fromTable": "dimBillPayorBridge",
        "fromColumn": "PayorID",
        "toTable": "dimPayor",
        "toColumn": "PayorID",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "annotations": [
      {
        "name": "DefaultMeasure",
        "value": "__No measures defined"
      }
    ]
  },
  "id": "SemanticModel"
}